
bomb：     文件格式 elf64-x86-64


Disassembly of section .init:

0000000000000d58 <_init>:
 d58:	48 83 ec 08          	sub    $0x8,%rsp
 d5c:	48 8b 05 85 32 20 00 	mov    0x203285(%rip),%rax        # 203fe8 <__gmon_start__>
 d63:	48 85 c0             	test   %rax,%rax
 d66:	74 02                	je     d6a <_init+0x12>
 d68:	ff d0                	callq  *%rax
 d6a:	48 83 c4 08          	add    $0x8,%rsp
 d6e:	c3                   	retq   

Disassembly of section .plt:

0000000000000d70 <.plt>:
 d70:	ff 35 92 31 20 00    	pushq  0x203192(%rip)        # 203f08 <_GLOBAL_OFFSET_TABLE_+0x8>
 d76:	ff 25 94 31 20 00    	jmpq   *0x203194(%rip)        # 203f10 <_GLOBAL_OFFSET_TABLE_+0x10>
 d7c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000d80 <getenv@plt>:
 d80:	ff 25 92 31 20 00    	jmpq   *0x203192(%rip)        # 203f18 <getenv@GLIBC_2.2.5>
 d86:	68 00 00 00 00       	pushq  $0x0
 d8b:	e9 e0 ff ff ff       	jmpq   d70 <.plt>

0000000000000d90 <__errno_location@plt>:
 d90:	ff 25 8a 31 20 00    	jmpq   *0x20318a(%rip)        # 203f20 <__errno_location@GLIBC_2.2.5>
 d96:	68 01 00 00 00       	pushq  $0x1
 d9b:	e9 d0 ff ff ff       	jmpq   d70 <.plt>

0000000000000da0 <strcpy@plt>:
 da0:	ff 25 82 31 20 00    	jmpq   *0x203182(%rip)        # 203f28 <strcpy@GLIBC_2.2.5>
 da6:	68 02 00 00 00       	pushq  $0x2
 dab:	e9 c0 ff ff ff       	jmpq   d70 <.plt>

0000000000000db0 <puts@plt>:
 db0:	ff 25 7a 31 20 00    	jmpq   *0x20317a(%rip)        # 203f30 <puts@GLIBC_2.2.5>
 db6:	68 03 00 00 00       	pushq  $0x3
 dbb:	e9 b0 ff ff ff       	jmpq   d70 <.plt>

0000000000000dc0 <write@plt>:
 dc0:	ff 25 72 31 20 00    	jmpq   *0x203172(%rip)        # 203f38 <write@GLIBC_2.2.5>
 dc6:	68 04 00 00 00       	pushq  $0x4
 dcb:	e9 a0 ff ff ff       	jmpq   d70 <.plt>

0000000000000dd0 <alarm@plt>:
 dd0:	ff 25 6a 31 20 00    	jmpq   *0x20316a(%rip)        # 203f40 <alarm@GLIBC_2.2.5>
 dd6:	68 05 00 00 00       	pushq  $0x5
 ddb:	e9 90 ff ff ff       	jmpq   d70 <.plt>

0000000000000de0 <close@plt>:
 de0:	ff 25 62 31 20 00    	jmpq   *0x203162(%rip)        # 203f48 <close@GLIBC_2.2.5>
 de6:	68 06 00 00 00       	pushq  $0x6
 deb:	e9 80 ff ff ff       	jmpq   d70 <.plt>

0000000000000df0 <read@plt>:
 df0:	ff 25 5a 31 20 00    	jmpq   *0x20315a(%rip)        # 203f50 <read@GLIBC_2.2.5>
 df6:	68 07 00 00 00       	pushq  $0x7
 dfb:	e9 70 ff ff ff       	jmpq   d70 <.plt>

0000000000000e00 <fgets@plt>:
 e00:	ff 25 52 31 20 00    	jmpq   *0x203152(%rip)        # 203f58 <fgets@GLIBC_2.2.5>
 e06:	68 08 00 00 00       	pushq  $0x8
 e0b:	e9 60 ff ff ff       	jmpq   d70 <.plt>

0000000000000e10 <signal@plt>:
 e10:	ff 25 4a 31 20 00    	jmpq   *0x20314a(%rip)        # 203f60 <signal@GLIBC_2.2.5>
 e16:	68 09 00 00 00       	pushq  $0x9
 e1b:	e9 50 ff ff ff       	jmpq   d70 <.plt>

0000000000000e20 <gethostbyname@plt>:
 e20:	ff 25 42 31 20 00    	jmpq   *0x203142(%rip)        # 203f68 <gethostbyname@GLIBC_2.2.5>
 e26:	68 0a 00 00 00       	pushq  $0xa
 e2b:	e9 40 ff ff ff       	jmpq   d70 <.plt>

0000000000000e30 <__memmove_chk@plt>:
 e30:	ff 25 3a 31 20 00    	jmpq   *0x20313a(%rip)        # 203f70 <__memmove_chk@GLIBC_2.3.4>
 e36:	68 0b 00 00 00       	pushq  $0xb
 e3b:	e9 30 ff ff ff       	jmpq   d70 <.plt>

0000000000000e40 <strtol@plt>:
 e40:	ff 25 32 31 20 00    	jmpq   *0x203132(%rip)        # 203f78 <strtol@GLIBC_2.2.5>
 e46:	68 0c 00 00 00       	pushq  $0xc
 e4b:	e9 20 ff ff ff       	jmpq   d70 <.plt>

0000000000000e50 <fflush@plt>:
 e50:	ff 25 2a 31 20 00    	jmpq   *0x20312a(%rip)        # 203f80 <fflush@GLIBC_2.2.5>
 e56:	68 0d 00 00 00       	pushq  $0xd
 e5b:	e9 10 ff ff ff       	jmpq   d70 <.plt>

0000000000000e60 <__isoc99_sscanf@plt>:
 e60:	ff 25 22 31 20 00    	jmpq   *0x203122(%rip)        # 203f88 <__isoc99_sscanf@GLIBC_2.7>
 e66:	68 0e 00 00 00       	pushq  $0xe
 e6b:	e9 00 ff ff ff       	jmpq   d70 <.plt>

0000000000000e70 <__printf_chk@plt>:
 e70:	ff 25 1a 31 20 00    	jmpq   *0x20311a(%rip)        # 203f90 <__printf_chk@GLIBC_2.3.4>
 e76:	68 0f 00 00 00       	pushq  $0xf
 e7b:	e9 f0 fe ff ff       	jmpq   d70 <.plt>

0000000000000e80 <fopen@plt>:
 e80:	ff 25 12 31 20 00    	jmpq   *0x203112(%rip)        # 203f98 <fopen@GLIBC_2.2.5>
 e86:	68 10 00 00 00       	pushq  $0x10
 e8b:	e9 e0 fe ff ff       	jmpq   d70 <.plt>

0000000000000e90 <exit@plt>:
 e90:	ff 25 0a 31 20 00    	jmpq   *0x20310a(%rip)        # 203fa0 <exit@GLIBC_2.2.5>
 e96:	68 11 00 00 00       	pushq  $0x11
 e9b:	e9 d0 fe ff ff       	jmpq   d70 <.plt>

0000000000000ea0 <connect@plt>:
 ea0:	ff 25 02 31 20 00    	jmpq   *0x203102(%rip)        # 203fa8 <connect@GLIBC_2.2.5>
 ea6:	68 12 00 00 00       	pushq  $0x12
 eab:	e9 c0 fe ff ff       	jmpq   d70 <.plt>

0000000000000eb0 <__fprintf_chk@plt>:
 eb0:	ff 25 fa 30 20 00    	jmpq   *0x2030fa(%rip)        # 203fb0 <__fprintf_chk@GLIBC_2.3.4>
 eb6:	68 13 00 00 00       	pushq  $0x13
 ebb:	e9 b0 fe ff ff       	jmpq   d70 <.plt>

0000000000000ec0 <sleep@plt>:
 ec0:	ff 25 f2 30 20 00    	jmpq   *0x2030f2(%rip)        # 203fb8 <sleep@GLIBC_2.2.5>
 ec6:	68 14 00 00 00       	pushq  $0x14
 ecb:	e9 a0 fe ff ff       	jmpq   d70 <.plt>

0000000000000ed0 <__ctype_b_loc@plt>:
 ed0:	ff 25 ea 30 20 00    	jmpq   *0x2030ea(%rip)        # 203fc0 <__ctype_b_loc@GLIBC_2.3>
 ed6:	68 15 00 00 00       	pushq  $0x15
 edb:	e9 90 fe ff ff       	jmpq   d70 <.plt>

0000000000000ee0 <__sprintf_chk@plt>:
 ee0:	ff 25 e2 30 20 00    	jmpq   *0x2030e2(%rip)        # 203fc8 <__sprintf_chk@GLIBC_2.3.4>
 ee6:	68 16 00 00 00       	pushq  $0x16
 eeb:	e9 80 fe ff ff       	jmpq   d70 <.plt>

0000000000000ef0 <socket@plt>:
 ef0:	ff 25 da 30 20 00    	jmpq   *0x2030da(%rip)        # 203fd0 <socket@GLIBC_2.2.5>
 ef6:	68 17 00 00 00       	pushq  $0x17
 efb:	e9 70 fe ff ff       	jmpq   d70 <.plt>

Disassembly of section .plt.got:

0000000000000f00 <__cxa_finalize@plt>:
 f00:	ff 25 f2 30 20 00    	jmpq   *0x2030f2(%rip)        # 203ff8 <__cxa_finalize@GLIBC_2.2.5>
 f06:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000f10 <_start>:
     f10:	31 ed                	xor    %ebp,%ebp
     f12:	49 89 d1             	mov    %rdx,%r9
     f15:	5e                   	pop    %rsi
     f16:	48 89 e2             	mov    %rsp,%rdx
     f19:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
     f1d:	50                   	push   %rax
     f1e:	54                   	push   %rsp
     f1f:	4c 8d 05 ea 15 00 00 	lea    0x15ea(%rip),%r8        # 2510 <__libc_csu_fini>
     f26:	48 8d 0d 73 15 00 00 	lea    0x1573(%rip),%rcx        # 24a0 <__libc_csu_init>
     f2d:	48 8d 3d e6 00 00 00 	lea    0xe6(%rip),%rdi        # 101a <main>
     f34:	ff 15 a6 30 20 00    	callq  *0x2030a6(%rip)        # 203fe0 <__libc_start_main@GLIBC_2.2.5>
     f3a:	f4                   	hlt    
     f3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000000f40 <deregister_tm_clones>:
     f40:	48 8d 3d 19 37 20 00 	lea    0x203719(%rip),%rdi        # 204660 <stdout@@GLIBC_2.2.5>
     f47:	55                   	push   %rbp
     f48:	48 8d 05 11 37 20 00 	lea    0x203711(%rip),%rax        # 204660 <stdout@@GLIBC_2.2.5>
     f4f:	48 39 f8             	cmp    %rdi,%rax
     f52:	48 89 e5             	mov    %rsp,%rbp
     f55:	74 19                	je     f70 <deregister_tm_clones+0x30>
     f57:	48 8b 05 7a 30 20 00 	mov    0x20307a(%rip),%rax        # 203fd8 <_ITM_deregisterTMCloneTable>
     f5e:	48 85 c0             	test   %rax,%rax
     f61:	74 0d                	je     f70 <deregister_tm_clones+0x30>
     f63:	5d                   	pop    %rbp
     f64:	ff e0                	jmpq   *%rax
     f66:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     f6d:	00 00 00 
     f70:	5d                   	pop    %rbp
     f71:	c3                   	retq   
     f72:	0f 1f 40 00          	nopl   0x0(%rax)
     f76:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     f7d:	00 00 00 

0000000000000f80 <register_tm_clones>:
     f80:	48 8d 3d d9 36 20 00 	lea    0x2036d9(%rip),%rdi        # 204660 <stdout@@GLIBC_2.2.5>
     f87:	48 8d 35 d2 36 20 00 	lea    0x2036d2(%rip),%rsi        # 204660 <stdout@@GLIBC_2.2.5>
     f8e:	55                   	push   %rbp
     f8f:	48 29 fe             	sub    %rdi,%rsi
     f92:	48 89 e5             	mov    %rsp,%rbp
     f95:	48 c1 fe 03          	sar    $0x3,%rsi
     f99:	48 89 f0             	mov    %rsi,%rax
     f9c:	48 c1 e8 3f          	shr    $0x3f,%rax
     fa0:	48 01 c6             	add    %rax,%rsi
     fa3:	48 d1 fe             	sar    %rsi
     fa6:	74 18                	je     fc0 <register_tm_clones+0x40>
     fa8:	48 8b 05 41 30 20 00 	mov    0x203041(%rip),%rax        # 203ff0 <_ITM_registerTMCloneTable>
     faf:	48 85 c0             	test   %rax,%rax
     fb2:	74 0c                	je     fc0 <register_tm_clones+0x40>
     fb4:	5d                   	pop    %rbp
     fb5:	ff e0                	jmpq   *%rax
     fb7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
     fbe:	00 00 
     fc0:	5d                   	pop    %rbp
     fc1:	c3                   	retq   
     fc2:	0f 1f 40 00          	nopl   0x0(%rax)
     fc6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
     fcd:	00 00 00 

0000000000000fd0 <__do_global_dtors_aux>:
     fd0:	80 3d b1 36 20 00 00 	cmpb   $0x0,0x2036b1(%rip)        # 204688 <completed.7696>
     fd7:	75 2f                	jne    1008 <__do_global_dtors_aux+0x38>
     fd9:	48 83 3d 17 30 20 00 	cmpq   $0x0,0x203017(%rip)        # 203ff8 <__cxa_finalize@GLIBC_2.2.5>
     fe0:	00 
     fe1:	55                   	push   %rbp
     fe2:	48 89 e5             	mov    %rsp,%rbp
     fe5:	74 0c                	je     ff3 <__do_global_dtors_aux+0x23>
     fe7:	48 8b 3d 1a 30 20 00 	mov    0x20301a(%rip),%rdi        # 204008 <__dso_handle>
     fee:	e8 0d ff ff ff       	callq  f00 <__cxa_finalize@plt>
     ff3:	e8 48 ff ff ff       	callq  f40 <deregister_tm_clones>
     ff8:	c6 05 89 36 20 00 01 	movb   $0x1,0x203689(%rip)        # 204688 <completed.7696>
     fff:	5d                   	pop    %rbp
    1000:	c3                   	retq   
    1001:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1008:	f3 c3                	repz retq 
    100a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001010 <frame_dummy>:
    1010:	55                   	push   %rbp
    1011:	48 89 e5             	mov    %rsp,%rbp
    1014:	5d                   	pop    %rbp
    1015:	e9 66 ff ff ff       	jmpq   f80 <register_tm_clones>

000000000000101a <main>:
    101a:	53                   	push   %rbx
    101b:	83 ff 01             	cmp    $0x1,%edi
    101e:	0f 84 f8 00 00 00    	je     111c <main+0x102>
    1024:	48 89 f3             	mov    %rsi,%rbx
    1027:	83 ff 02             	cmp    $0x2,%edi
    102a:	0f 85 21 01 00 00    	jne    1151 <main+0x137>
    1030:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
    1034:	48 8d 35 e9 14 00 00 	lea    0x14e9(%rip),%rsi        # 2524 <_IO_stdin_used+0x4>
    103b:	e8 40 fe ff ff       	callq  e80 <fopen@plt>
    1040:	48 89 05 49 36 20 00 	mov    %rax,0x203649(%rip)        # 204690 <infile>
    1047:	48 85 c0             	test   %rax,%rax
    104a:	0f 84 df 00 00 00    	je     112f <main+0x115>
    1050:	e8 e3 05 00 00       	callq  1638 <initialize_bomb>
    1055:	48 8d 3d 4c 15 00 00 	lea    0x154c(%rip),%rdi        # 25a8 <_IO_stdin_used+0x88>
    105c:	e8 4f fd ff ff       	callq  db0 <puts@plt>
    1061:	48 8d 3d 80 15 00 00 	lea    0x1580(%rip),%rdi        # 25e8 <_IO_stdin_used+0xc8>
    1068:	e8 43 fd ff ff       	callq  db0 <puts@plt>
    106d:	e8 d2 06 00 00       	callq  1744 <read_line>
    1072:	48 89 c7             	mov    %rax,%rdi
    1075:	e8 fa 00 00 00       	callq  1174 <phase_1>
    107a:	e8 09 08 00 00       	callq  1888 <phase_defused>
    107f:	48 8d 3d 92 15 00 00 	lea    0x1592(%rip),%rdi        # 2618 <_IO_stdin_used+0xf8>
    1086:	e8 25 fd ff ff       	callq  db0 <puts@plt>
    108b:	e8 b4 06 00 00       	callq  1744 <read_line>
    1090:	48 89 c7             	mov    %rax,%rdi
    1093:	e8 fc 00 00 00       	callq  1194 <phase_2>
    1098:	e8 eb 07 00 00       	callq  1888 <phase_defused>
    109d:	48 8d 3d b9 14 00 00 	lea    0x14b9(%rip),%rdi        # 255d <_IO_stdin_used+0x3d>
    10a4:	e8 07 fd ff ff       	callq  db0 <puts@plt>
    10a9:	e8 96 06 00 00       	callq  1744 <read_line>
    10ae:	48 89 c7             	mov    %rax,%rdi
    10b1:	e8 28 01 00 00       	callq  11de <phase_3>
    10b6:	e8 cd 07 00 00       	callq  1888 <phase_defused>
    10bb:	48 8d 3d b9 14 00 00 	lea    0x14b9(%rip),%rdi        # 257b <_IO_stdin_used+0x5b>
    10c2:	e8 e9 fc ff ff       	callq  db0 <puts@plt>
    10c7:	e8 78 06 00 00       	callq  1744 <read_line>
    10cc:	48 89 c7             	mov    %rax,%rdi
    10cf:	e8 04 02 00 00       	callq  12d8 <phase_4>
    10d4:	e8 af 07 00 00       	callq  1888 <phase_defused>
    10d9:	48 8d 3d 68 15 00 00 	lea    0x1568(%rip),%rdi        # 2648 <_IO_stdin_used+0x128>
    10e0:	e8 cb fc ff ff       	callq  db0 <puts@plt>
    10e5:	e8 5a 06 00 00       	callq  1744 <read_line>
    10ea:	48 89 c7             	mov    %rax,%rdi
    10ed:	e8 3f 02 00 00       	callq  1331 <phase_5>
    10f2:	e8 91 07 00 00       	callq  1888 <phase_defused>
    10f7:	48 8d 3d 8c 14 00 00 	lea    0x148c(%rip),%rdi        # 258a <_IO_stdin_used+0x6a>
    10fe:	e8 ad fc ff ff       	callq  db0 <puts@plt>
    1103:	e8 3c 06 00 00       	callq  1744 <read_line>
    1108:	48 89 c7             	mov    %rax,%rdi
    110b:	e8 67 02 00 00       	callq  1377 <phase_6>
    1110:	e8 73 07 00 00       	callq  1888 <phase_defused>
    1115:	b8 00 00 00 00       	mov    $0x0,%eax
    111a:	5b                   	pop    %rbx
    111b:	c3                   	retq   
    111c:	48 8b 05 4d 35 20 00 	mov    0x20354d(%rip),%rax        # 204670 <stdin@@GLIBC_2.2.5>
    1123:	48 89 05 66 35 20 00 	mov    %rax,0x203566(%rip)        # 204690 <infile>
    112a:	e9 21 ff ff ff       	jmpq   1050 <main+0x36>
    112f:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
    1133:	48 8b 13             	mov    (%rbx),%rdx
    1136:	48 8d 35 e9 13 00 00 	lea    0x13e9(%rip),%rsi        # 2526 <_IO_stdin_used+0x6>
    113d:	bf 01 00 00 00       	mov    $0x1,%edi
    1142:	e8 29 fd ff ff       	callq  e70 <__printf_chk@plt>
    1147:	bf 08 00 00 00       	mov    $0x8,%edi
    114c:	e8 3f fd ff ff       	callq  e90 <exit@plt>
    1151:	48 8b 16             	mov    (%rsi),%rdx
    1154:	48 8d 35 e8 13 00 00 	lea    0x13e8(%rip),%rsi        # 2543 <_IO_stdin_used+0x23>
    115b:	bf 01 00 00 00       	mov    $0x1,%edi
    1160:	b8 00 00 00 00       	mov    $0x0,%eax
    1165:	e8 06 fd ff ff       	callq  e70 <__printf_chk@plt>
    116a:	bf 08 00 00 00       	mov    $0x8,%edi
    116f:	e8 1c fd ff ff       	callq  e90 <exit@plt>

0000000000001174 <phase_1>:
    1174:	48 83 ec 08          	sub    $0x8,%rsp
    1178:	48 8d 35 ed 14 00 00 	lea    0x14ed(%rip),%rsi        # 266c <_IO_stdin_used+0x14c> //rsi全局变量地址
    117f:	e8 4d 04 00 00       	callq  15d1 <strings_not_equal>  //不相等时候返回一
    1184:	85 c0                	test   %eax,%eax//相与，
    1186:	75 05                	jne    118d <phase_1+0x19>
    1188:	48 83 c4 08          	add    $0x8,%rsp
    118c:	c3                   	retq   
    118d:	e8 4b 05 00 00       	callq  16dd <explode_bomb>
    1192:	eb f4                	jmp    1188 <phase_1+0x14>

0000000000001194 <phase_2>:
    1194:	55                   	push   %rbp
    1195:	53                   	push   %rbx
    1196:	48 83 ec 28          	sub    $0x28,%rsp				//rsp-40
    119a:	48 89 e6             	mov    %rsp,%rsi				//rsp给rsi
    119d:	e8 61 05 00 00       	callq  1703 <read_six_numbers>		//调用读数
    11a2:	83 3c 24 00          	cmpl   $0x0,(%rsp)				//比较0和当前rsp
    11a6:	75 07                	jne    11af <phase_2+0x1b>			//不等于时候炸
    11a8:	83 7c 24 04 01       	cmpl   $0x1,0x4(%rsp)			//比较1和rsp+4
    11ad:	74 05                	je     11b4 <phase_2+0x20>			//等于时候跳转至11b4
    11af:	e8 29 05 00 00       	callq  16dd <explode_bomb>			//不等于时候炸
    11b4:	48 89 e3             	mov    %rsp,%rbx				//当前rsp给rbx
    11b7:	48 8d 6b 10          	lea    0x10(%rbx),%rbp			//rbx(rsp)+16给rbp
    11bb:	eb 09                	jmp    11c6 <phase_2+0x32>			//跳转11c6
    11bd:	48 83 c3 04          	add    $0x4,%rbx				//rbx = rbx+4
    11c1:	48 39 eb             	cmp    %rbp,%rbx				//比较rbp和rbx
    11c4:	74 11                	je     11d7 <phase_2+0x43>			//等于时跳转11d7
    11c6:	8b 43 04             	mov    0x4(%rbx),%eax			//rbx+4 给eax
    11c9:	03 03                	add    (%rbx),%eax				//$rbx内容加给eax
    11cb:	39 43 08             	cmp    %eax,0x8(%rbx)			//比较eax和rbx+8
    11ce:	74 ed                	je     11bd <phase_2+0x29>			//等于时候跳转11bd
    11d0:	e8 08 05 00 00       	callq  16dd <explode_bomb>			//不等于时候炸
    11d5:	eb e6                	jmp    11bd <phase_2+0x29>
    11d7:	48 83 c4 28          	add    $0x28,%rsp				//rsp+40
    11db:	5b                   	pop    %rbx
    11dc:	5d                   	pop    %rbp
    11dd:	c3                   	retq   

00000000000011de <phase_3>:
    11de:	48 83 ec 18          	sub    $0x18,%rsp			//rsp-24
    11e2:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx		//rcx = rsp + 8
    11e7:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx		//rdx = rsp + 12
    11ec:	48 8d 35 24 16 00 00 	lea    0x1624(%rip),%rsi        # 2817  <array.3415+0x177>
							//("%d  %d")
    11f3:	b8 00 00 00 00       	mov    $0x0,%eax			//eax = 0
    11f8:	e8 63 fc ff ff       	callq  e60 <__isoc99_sscanf@plt>
    11fd:	83 f8 01             	cmp    $0x1,%eax			//比较eax和1（条件）
    1200:	7e 1f                	jle    1221 <phase_3+0x43>		//eax<=1时候跳转1221炸弹爆炸
    1202:	83 7c 24 0c 07       	cmpl   $0x7,0xc(%rsp)		//比较rsp+12 （第二个数）和 7
    1207:	0f 87 8b 00 00 00    	ja     1298 <phase_3+0xba>   	//rsp+12>7时候跳转1298炸弹爆炸
    120d:	8b 44 24 0c          	mov    0xc(%rsp),%eax		//否则eax = rsp+12（第二个数）
    1211:	48 8d 15 68 14 00 00 	lea    0x1468(%rip),%rdx        # 2680 <_IO_stdin_used+0x160>
							//rdx = rip+0x1468
    1218:	48 63 04 82          	movslq (%rdx,%rax,4),%rax		//rax = rdx+rax*4
    121c:	48 01 d0             	add    %rdx,%rax			// rax = rax +rdx
    121f:	ff e0                	jmpq   *%rax			//跳转到rax里面的地址处
    1221:	e8 b7 04 00 00       	callq  16dd <explode_bomb>
    1226:	eb da                	jmp    1202 <phase_3+0x24>		//跳转1202（上）
    1228:	b8 36 01 00 00       	mov    $0x136,%eax		//0x136给eax(310)
    122d:	eb 05                	jmp    1234 <phase_3+0x56>		//跳转1234（下）
    122f:	b8 00 00 00 00       	mov    $0x0,%eax			//eax = 0
    1234:	2d b8 01 00 00       	sub    $0x1b8,%eax			//eax-0x1b8(440)
    1239:	05 b6 02 00 00       	add    $0x2b6,%eax			//eax+0x2b6(694)
    123e:	2d d9 01 00 00       	sub    $0x1d9,%eax			//eax-0x1d9(473)
    1243:	05 d9 01 00 00       	add    $0x1d9,%eax			//eax+0x1d9
    1248:	2d d9 01 00 00       	sub    $0x1d9,%eax			//eax-0x1d9
    124d:	05 d9 01 00 00       	add    $0x1d9,%eax			//eax+0x1d9
    1252:	2d d9 01 00 00       	sub    $0x1d9,%eax			//eax-0x1d9
    1257:	83 7c 24 0c 05       	cmpl   $0x5,0xc(%rsp)		//比较rsp+12 （第一个数）和 5
    125c:	7f 06                	jg     1264 <phase_3+0x86>		//大于时跳转1264炸弹爆炸
    125e:	39 44 24 08          	cmp    %eax,0x8(%rsp)		//否则比较rsp+8（第二个数）和eax
    1262:	74 05                	je     1269 <phase_3+0x8b>		//相等时跳转1269
    1264:	e8 74 04 00 00       	callq  16dd <explode_bomb>
    1269:	48 83 c4 18          	add    $0x18,%rsp			//rsp+18
    126d:	c3                   	retq   				//退出
    126e:	b8 00 00 00 00       	mov    $0x0,%eax			//0给eax
    1273:	eb c4                	jmp    1239 <phase_3+0x5b>		//跳转1239
    1275:	b8 00 00 00 00       	mov    $0x0,%eax
    127a:	eb c2                	jmp    123e <phase_3+0x60>
    127c:	b8 00 00 00 00       	mov    $0x0,%eax
    1281:	eb c0                	jmp    1243 <phase_3+0x65>
    1283:	b8 00 00 00 00       	mov    $0x0,%eax
    1288:	eb be                	jmp    1248 <phase_3+0x6a>
    128a:	b8 00 00 00 00       	mov    $0x0,%eax
    128f:	eb bc                	jmp    124d <phase_3+0x6f>
    1291:	b8 00 00 00 00       	mov    $0x0,%eax
    1296:	eb ba                	jmp    1252 <phase_3+0x74>
    1298:	e8 40 04 00 00       	callq  16dd <explode_bomb>
    129d:	b8 00 00 00 00       	mov    $0x0,%eax
    12a2:	eb b3                	jmp    1257 <phase_3+0x79>

00000000000012a4 <func4>:
    12a4:	53                   	push   %rbx
    12a5:	89 d0                	mov    %edx,%eax			//edx给eax
    12a7:	29 f0                	sub    %esi,%eax			//eax = eax-esi
    12a9:	89 c3                	mov    %eax,%ebx			//ebx = eax
    12ab:	c1 eb 1f             	shr    $0x1f,%ebx			//ebx左移0x1f位
    12ae:	01 c3                	add    %eax,%ebx			//ebx = eax+ebx
    12b0:	d1 fb                	sar    %ebx			//ebx算术右移1位
    12b2:	01 f3                	add    %esi,%ebx			//ebx = ebx + esi
    12b4:	39 fb                	cmp    %edi,%ebx			//比较ebx和edi
    12b6:	7f 08                	jg     12c0 <func4+0x1c>		//ebx>edi 跳转12c0
    12b8:	39 fb                	cmp    %edi,%ebx			
    12ba:	7c 10                	jl     12cc <func4+0x28>		//ebx<edi 跳转12cc
    12bc:	89 d8                	mov    %ebx,%eax			//如若相等，则将ebx给eax
    12be:	5b                   	pop    %rbx			
    12bf:	c3                   	retq   				//返回phase4去

    12c0:	8d 53 ff             	lea    -0x1(%rbx),%edx		//edx = rbx -1
    12c3:	e8 dc ff ff ff       	callq  12a4 <func4>		//重新调用
    12c8:	01 c3                	add    %eax,%ebx			//ebx = ebx + eax
    12ca:	eb f0                	jmp    12bc <func4+0x18>		
    12cc:	8d 73 01             	lea    0x1(%rbx),%esi		//esi = rbx + 1
    12cf:	e8 d0 ff ff ff       	callq  12a4 <func4>		//重新调用
    12d4:	01 c3                	add    %eax,%ebx
    12d6:	eb e4                	jmp    12bc <func4+0x18>

00000000000012d8 <phase_4>:
    12d8:	48 83 ec 18          	sub    $0x18,%rsp
    12dc:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    12e1:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
    12e6:	48 8d 35 2a 15 00 00 	lea    0x152a(%rip),%rsi        # 2817 <array.3415+0x177>
    12ed:	b8 00 00 00 00       	mov    $0x0,%eax
    12f2:	e8 69 fb ff ff       	callq  e60 <__isoc99_sscanf@plt>
    12f7:	83 f8 02             	cmp    $0x2,%eax
    12fa:	75 07                	jne    1303 <phase_4+0x2b>		//eax不等于二时候就炸
    12fc:	83 7c 24 0c 0e       	cmpl   $0xe,0xc(%rsp)
    1301:	76 05                	jbe    1308 <phase_4+0x30>		//第一个数小于14才能跳转1308，否则就炸
    1303:	e8 d5 03 00 00       	callq  16dd <explode_bomb>
    1308:	ba 0e 00 00 00       	mov    $0xe,%edx			//edx = 14
    130d:	be 00 00 00 00       	mov    $0x0,%esi			//esi = 0
    1312:	8b 7c 24 0c          	mov    0xc(%rsp),%edi		//edi = 第一个数
    1316:	e8 89 ff ff ff       	callq  12a4 <func4>		//调用func4
    131b:	83 f8 12             	cmp    $0x12,%eax			//出来比较eax和18
    131e:	75 07                	jne    1327 <phase_4+0x4f>		//不等时爆炸
    1320:	83 7c 24 08 12       	cmpl   $0x12,0x8(%rsp)		//等于时比较第二个数和18
    1325:	74 05                	je     132c <phase_4+0x54>		//等于时跳转完成
    1327:	e8 b1 03 00 00       	callq  16dd <explode_bomb>		//不等于时候爆炸
    132c:	48 83 c4 18          	add    $0x18,%rsp
    1330:	c3                   	retq   

0000000000001331 <phase_5>:
    1331:	53                   	push   %rbx
    1332:	48 89 fb             	mov    %rdi,%rbx			//rbx = rdi （指向了录取的数据）
    1335:	e8 7a 02 00 00       	callq  15b4 <string_length>		//调用计算字符串长度存储rax中
    133a:	83 f8 06             	cmp    $0x6,%eax
    133d:	75 31                	jne    1370 <phase_5+0x3f>		//字符串长度不等于6就炸
    133f:	48 89 d8             	mov    %rbx,%rax			//rax = rbx（继续存储录入的数据）
    1342:	48 8d 7b 06          	lea    0x6(%rbx),%rdi		//地址rdi = rbx+6（字符串末）
    1346:	b9 00 00 00 00       	mov    $0x0,%ecx			//ecx = 0【初始化】
    134b:	48 8d 35 4e 13 00 00 	lea    0x134e(%rip),%rsi        # 26a0 <array.3415>
							//地址rsi = rip + 0x134e
    1352:	0f b6 10             	movzbl (%rax),%edx		//edx = rax
    1355:	83 e2 0f             	and    $0xf,%edx			//edx = edx & 1111（决定edx<16,进一步决定下一步的偏移量不超过60，）
    1358:	03 0c 96             	add    (%rsi,%rdx,4),%ecx		//ecx = ecx + （rsi+4*edx）
    135b:	48 83 c0 01          	add    $0x1,%rax			//rax++
    135f:	48 39 f8             	cmp    %rdi,%rax			//比较rax和rdi（代表循环次数）
    1362:	75 ee                	jne    1352 <phase_5+0x21>		//不等于向上跳转至1352
    1364:	83 f9 30             	cmp    $0x30,%ecx			//直至等于时比较ecx和0x30（48）
    1367:	74 05                	je     136e <phase_5+0x3d>		//等于时候向下跳转结束，不等于时候爆炸
    1369:	e8 6f 03 00 00       	callq  16dd <explode_bomb>
    136e:	5b                   	pop    %rbx
    136f:	c3                   	retq   
    1370:	e8 68 03 00 00       	callq  16dd <explode_bomb>
    1375:	eb c8                	jmp    133f <phase_5+0xe>

0000000000001377 <phase_6>:
    1377:	41 56                	push   %r14
    1379:	41 55                	push   %r13
    137b:	41 54                	push   %r12
    137d:	55                   	push   %rbp
    137e:	53                   	push   %rbx
    137f:	48 83 ec 50          	sub    $0x50,%rsp			//rsp-80
    1383:	4c 8d 6c 24 30       	lea    0x30(%rsp),%r13		//r13 = rsp+0x30（48）
    1388:	4c 89 ee             	mov    %r13,%rsi			//rsi = r13
    138b:	e8 73 03 00 00       	callq  1703 <read_six_numbers>	//six numbers
    1390:	4d 89 ec             	mov    %r13,%r12			//r12 = r13
    1393:	41 be 00 00 00 00    	mov    $0x0,%r14d		//r14d初始化为0
    1399:	eb 26                	jmp    13c1 <phase_6+0x4a>		//跳转13c1
    139b:	e8 3d 03 00 00       	callq  16dd <explode_bomb>
    13a0:	eb 2e                	jmp    13d0 <phase_6+0x59>		//跳转13d0（r14d自增）

（确保六个数不相等，而且筛选出大于5的数据送下去）
    13a2:	83 c3 01             	add    $0x1,%ebx			
    13a5:	83 fb 05             	cmp    $0x5,%ebx
    13a8:	7f 13                	jg     13bd <phase_6+0x46>		//ebx自增运算，与5比较大于的话，跳转13bd
    13aa:	48 63 c3             	movslq %ebx,%rax			//rax = ebx
    13ad:	8b 44 84 30          	mov    0x30(%rsp,%rax,4),%eax	//eax = rsp + 0x30(48) + 4*rax （rax是几是第几加1个数）
    13b1:	39 45 00             	cmp    %eax,0x0(%rbp)		//比较rbp和eax
    13b4:	75 ec                	jne    13a2 <phase_6+0x2b>		//不等时候跳转回13a2


    13b6:	e8 22 03 00 00       	callq  16dd <explode_bomb>
    13bb:	eb e5                	jmp    13a2 <phase_6+0x2b>		//跳转回13a2
    13bd:	49 83 c5 04          	add    $0x4,%r13			//r13 = r13+4
    13c1:	4c 89 ed             	mov    %r13,%rbp			//rbp = r13
    13c4:	41 8b 45 00          	mov    0x0(%r13),%eax		//eax = 第一个数
    13c8:	83 e8 01             	sub    $0x1,%eax		
    13cb:	83 f8 05             	cmp    $0x5,%eax
    13ce:	77 cb                	ja     139b <phase_6+0x24>		//第一个数减一大于五就炸，
    13d0:	41 83 c6 01          	add    $0x1,%r14d			
    13d4:	41 83 fe 06          	cmp    $0x6,%r14d			//r14d初始化为零，自增之后与6比较可知此为计数阶段
    13d8:	74 05                	je     13df <phase_6+0x68>		//相等就跳转13df
    13da:	44 89 f3             	mov    %r14d,%ebx			//不等时候把r14d给ebx
    13dd:	eb cb                	jmp    13aa <phase_6+0x33>		//跳回 13aa行
（所有数据小于等于6，否则炸，而且此处将所有第一个6前边包括6的数做了减1操作）
    13df:	49 8d 4c 24 18       	lea    0x18(%r12),%rcx		//rcx = r12+0x18(24)
    13e4:	ba 07 00 00 00       	mov    $0x7,%edx			//edx = 7
    13e9:	89 d0                	mov    %edx,%eax			//eax = edx
    13eb:	41 2b 04 24          	sub    (%r12),%eax			//eax  = eax-r12
    13ef:	41 89 04 24          	mov    %eax,(%r12)			//r12 = eax
    13f3:	49 83 c4 04          	add    $0x4,%r12			//r12  = r12+4
    13f7:	4c 39 e1             	cmp    %r12,%rcx			//比较rcx和r12
    13fa:	75 ed                	jne    13e9 <phase_6+0x72>		//不等时候跳转13e9
    13fc:	be 00 00 00 00       	mov    $0x0,%esi			//否则esi = 0
    1401:	eb 19                	jmp    141c <phase_6+0xa5>		//跳转141c
    1403:	48 8b 52 08          	mov    0x8(%rdx),%rdx		//rdx = rdx + 8
    1407:	83 c0 01             	add    $0x1,%eax			//eax = eax + 1
    140a:	39 c8                	cmp    %ecx,%eax			//比较eax和ecx
    140c:	75 f5                	jne    1403 <phase_6+0x8c>		//不等于时候向上跳转回1403
    140e:	48 89 14 f4          	mov    %rdx,(%rsp,%rsi,8)		//rsp + 8*rsi = rdx
    1412:	48 83 c6 01          	add    $0x1,%rsi			//rsi++
    1416:	48 83 fe 06          	cmp    $0x6,%rsi			//比较rsi和6
    141a:	74 17                	je     1433 <phase_6+0xbc>		//等于时候向下跳转1433
    141c:	8b 4c b4 30          	mov    0x30(%rsp,%rsi,4),%ecx	//ecx = rsp+4*rsi+0x30
    1420:	b8 01 00 00 00       	mov    $0x1,%eax			//eax  = 0
    1425:	48 8d 15 e4 2d 20 00 	lea    0x202de4(%rip),%rdx        # 204210 <node1>
    142c:	83 f9 01             	cmp    $0x1,%ecx			//比较ecx和1
    142f:	7f d2                	jg     1403 <phase_6+0x8c>		//大于则跳转回1403
    1431:	eb db                	jmp    140e <phase_6+0x97>		//否则跳转140e行
    1433:	48 8b 1c 24          	mov    (%rsp),%rbx			//rbx = rsp
    1437:	48 8b 44 24 08       	mov    0x8(%rsp),%rax		//rax = rbx+8
    143c:	48 89 43 08          	mov    %rax,0x8(%rbx)		//rbx + 8=rax 
    1440:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx		//rdx = rsp+ 16
    1445:	48 89 50 08          	mov    %rdx,0x8(%rax)		//rax+8 = rdx
    1449:	48 8b 44 24 18       	mov    0x18(%rsp),%rax		//rax = rsp + 24
    144e:	48 89 42 08          	mov    %rax,0x8(%rdx)		//rdx + 8 = rax
    1452:	48 8b 54 24 20       	mov    0x20(%rsp),%rdx		//rdx = rsp + 32
    1457:	48 89 50 08          	mov    %rdx,0x8(%rax)		//rax + 8 = rdx
    145b:	48 8b 44 24 28       	mov    0x28(%rsp),%rax		//rax = rsp+ 40
    1460:	48 89 42 08          	mov    %rax,0x8(%rdx)		//rdx + 8 = rax
    1464:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)	//rax+8 = 0
    146b:	00 
    146c:	bd 05 00 00 00       	mov    $0x5,%ebp			//ebp = 5
    1471:	eb 09                	jmp    147c <phase_6+0x105>	//跳转147c
    1473:	48 8b 5b 08          	mov    0x8(%rbx),%rbx		//rbx = rbx+8
    1477:	83 ed 01             	sub    $0x1,%ebp			//ebp = ebp-1
    147a:	74 11                	je     148d <phase_6+0x116>		//等于跳转148d
    147c:	48 8b 43 08          	mov    0x8(%rbx),%rax		//rax = rbx+8
    1480:	8b 00                	mov    (%rax),%eax			//eax = rax
    1482:	39 03                	cmp    %eax,(%rbx)			//比较rbx和eax
    1484:	7d ed                	jge    1473 <phase_6+0xfc>		//大于向上跳转1473
    1486:	e8 52 02 00 00       	callq  16dd <explode_bomb>		//否则炸
    148b:	eb e6                	jmp    1473 <phase_6+0xfc>		//向上跳转1473
    148d:	48 83 c4 50          	add    $0x50,%rsp			
    1491:	5b                   	pop    %rbx
    1492:	5d                   	pop    %rbp
    1493:	41 5c                	pop    %r12
    1495:	41 5d                	pop    %r13
    1497:	41 5e                	pop    %r14
    1499:	c3                   	retq   

000000000000149a <fun7>:
    149a:	48 85 ff             	test   %rdi,%rdi
    149d:	74 34                	je     14d3 <fun7+0x39>
    149f:	48 83 ec 08          	sub    $0x8,%rsp
    14a3:	8b 17                	mov    (%rdi),%edx
    14a5:	39 f2                	cmp    %esi,%edx
    14a7:	7f 0e                	jg     14b7 <fun7+0x1d>
    14a9:	b8 00 00 00 00       	mov    $0x0,%eax
    14ae:	39 f2                	cmp    %esi,%edx
    14b0:	75 12                	jne    14c4 <fun7+0x2a>
    14b2:	48 83 c4 08          	add    $0x8,%rsp
    14b6:	c3                   	retq   
    14b7:	48 8b 7f 08          	mov    0x8(%rdi),%rdi
    14bb:	e8 da ff ff ff       	callq  149a <fun7>
    14c0:	01 c0                	add    %eax,%eax
    14c2:	eb ee                	jmp    14b2 <fun7+0x18>
    14c4:	48 8b 7f 10          	mov    0x10(%rdi),%rdi
    14c8:	e8 cd ff ff ff       	callq  149a <fun7>
    14cd:	8d 44 00 01          	lea    0x1(%rax,%rax,1),%eax
    14d1:	eb df                	jmp    14b2 <fun7+0x18>
    14d3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    14d8:	c3                   	retq   

00000000000014d9 <secret_phase>:
    14d9:	53                   	push   %rbx
    14da:	e8 65 02 00 00       	callq  1744 <read_line>
    14df:	ba 0a 00 00 00       	mov    $0xa,%edx
    14e4:	be 00 00 00 00       	mov    $0x0,%esi
    14e9:	48 89 c7             	mov    %rax,%rdi
    14ec:	e8 4f f9 ff ff       	callq  e40 <strtol@plt>
    14f1:	48 89 c3             	mov    %rax,%rbx
    14f4:	8d 40 ff             	lea    -0x1(%rax),%eax
    14f7:	3d e8 03 00 00       	cmp    $0x3e8,%eax
    14fc:	77 25                	ja     1523 <secret_phase+0x4a>
    14fe:	89 de                	mov    %ebx,%esi
    1500:	48 8d 3d 29 2c 20 00 	lea    0x202c29(%rip),%rdi        # 204130 <n1>
    1507:	e8 8e ff ff ff       	callq  149a <fun7>
    150c:	85 c0                	test   %eax,%eax
    150e:	75 1a                	jne    152a <secret_phase+0x51>
    1510:	48 8d 3d c9 11 00 00 	lea    0x11c9(%rip),%rdi        # 26e0 <array.3415+0x40>
    1517:	e8 94 f8 ff ff       	callq  db0 <puts@plt>
    151c:	e8 67 03 00 00       	callq  1888 <phase_defused>
    1521:	5b                   	pop    %rbx
    1522:	c3                   	retq   
    1523:	e8 b5 01 00 00       	callq  16dd <explode_bomb>
    1528:	eb d4                	jmp    14fe <secret_phase+0x25>
    152a:	e8 ae 01 00 00       	callq  16dd <explode_bomb>
    152f:	eb df                	jmp    1510 <secret_phase+0x37>

0000000000001531 <sig_handler>:
    1531:	48 83 ec 08          	sub    $0x8,%rsp
    1535:	48 8d 3d cc 11 00 00 	lea    0x11cc(%rip),%rdi        # 2708 <array.3415+0x68>
    153c:	e8 6f f8 ff ff       	callq  db0 <puts@plt>
    1541:	bf 03 00 00 00       	mov    $0x3,%edi
    1546:	e8 75 f9 ff ff       	callq  ec0 <sleep@plt>
    154b:	48 8d 35 78 12 00 00 	lea    0x1278(%rip),%rsi        # 27ca <array.3415+0x12a>
    1552:	bf 01 00 00 00       	mov    $0x1,%edi
    1557:	b8 00 00 00 00       	mov    $0x0,%eax
    155c:	e8 0f f9 ff ff       	callq  e70 <__printf_chk@plt>
    1561:	48 8b 3d f8 30 20 00 	mov    0x2030f8(%rip),%rdi        # 204660 <stdout@@GLIBC_2.2.5>
    1568:	e8 e3 f8 ff ff       	callq  e50 <fflush@plt>
    156d:	bf 01 00 00 00       	mov    $0x1,%edi
    1572:	e8 49 f9 ff ff       	callq  ec0 <sleep@plt>
    1577:	48 8d 3d 54 12 00 00 	lea    0x1254(%rip),%rdi        # 27d2 <array.3415+0x132>
    157e:	e8 2d f8 ff ff       	callq  db0 <puts@plt>
    1583:	bf 10 00 00 00       	mov    $0x10,%edi
    1588:	e8 03 f9 ff ff       	callq  e90 <exit@plt>

000000000000158d <invalid_phase>:
    158d:	48 83 ec 08          	sub    $0x8,%rsp
    1591:	48 89 fa             	mov    %rdi,%rdx
    1594:	48 8d 35 3f 12 00 00 	lea    0x123f(%rip),%rsi        # 27da <array.3415+0x13a>
    159b:	bf 01 00 00 00       	mov    $0x1,%edi
    15a0:	b8 00 00 00 00       	mov    $0x0,%eax
    15a5:	e8 c6 f8 ff ff       	callq  e70 <__printf_chk@plt>
    15aa:	bf 08 00 00 00       	mov    $0x8,%edi
    15af:	e8 dc f8 ff ff       	callq  e90 <exit@plt>

00000000000015b4 <string_length>:
    15b4:	80 3f 00             	cmpb   $0x0,(%rdi)
    15b7:	74 12                	je     15cb <string_length+0x17>
    15b9:	48 89 fa             	mov    %rdi,%rdx
    15bc:	48 83 c2 01          	add    $0x1,%rdx
    15c0:	89 d0                	mov    %edx,%eax
    15c2:	29 f8                	sub    %edi,%eax
    15c4:	80 3a 00             	cmpb   $0x0,(%rdx)
    15c7:	75 f3                	jne    15bc <string_length+0x8>
    15c9:	f3 c3                	repz retq 
    15cb:	b8 00 00 00 00       	mov    $0x0,%eax
    15d0:	c3                   	retq   

00000000000015d1 <strings_not_equal>:
    15d1:	41 54                	push   %r12
    15d3:	55                   	push   %rbp
    15d4:	53                   	push   %rbx
    15d5:	48 89 fb             	mov    %rdi,%rbx
    15d8:	48 89 f5             	mov    %rsi,%rbp
    15db:	e8 d4 ff ff ff       	callq  15b4 <string_length>
    15e0:	41 89 c4             	mov    %eax,%r12d
    15e3:	48 89 ef             	mov    %rbp,%rdi
    15e6:	e8 c9 ff ff ff       	callq  15b4 <string_length>
    15eb:	ba 01 00 00 00       	mov    $0x1,%edx
    15f0:	41 39 c4             	cmp    %eax,%r12d
    15f3:	74 07                	je     15fc <strings_not_equal+0x2b>
    15f5:	89 d0                	mov    %edx,%eax
    15f7:	5b                   	pop    %rbx
    15f8:	5d                   	pop    %rbp
    15f9:	41 5c                	pop    %r12
    15fb:	c3                   	retq   
    15fc:	0f b6 03             	movzbl (%rbx),%eax
    15ff:	84 c0                	test   %al,%al
    1601:	74 27                	je     162a <strings_not_equal+0x59>
    1603:	3a 45 00             	cmp    0x0(%rbp),%al
    1606:	75 29                	jne    1631 <strings_not_equal+0x60>
    1608:	48 83 c3 01          	add    $0x1,%rbx
    160c:	48 83 c5 01          	add    $0x1,%rbp
    1610:	0f b6 03             	movzbl (%rbx),%eax
    1613:	84 c0                	test   %al,%al
    1615:	74 0c                	je     1623 <strings_not_equal+0x52>
    1617:	38 45 00             	cmp    %al,0x0(%rbp)
    161a:	74 ec                	je     1608 <strings_not_equal+0x37>
    161c:	ba 01 00 00 00       	mov    $0x1,%edx
    1621:	eb d2                	jmp    15f5 <strings_not_equal+0x24>
    1623:	ba 00 00 00 00       	mov    $0x0,%edx
    1628:	eb cb                	jmp    15f5 <strings_not_equal+0x24>
    162a:	ba 00 00 00 00       	mov    $0x0,%edx
    162f:	eb c4                	jmp    15f5 <strings_not_equal+0x24>
    1631:	ba 01 00 00 00       	mov    $0x1,%edx
    1636:	eb bd                	jmp    15f5 <strings_not_equal+0x24>

0000000000001638 <initialize_bomb>:
    1638:	48 83 ec 08          	sub    $0x8,%rsp
    163c:	48 8d 35 ee fe ff ff 	lea    -0x112(%rip),%rsi        # 1531 <sig_handler>
    1643:	bf 02 00 00 00       	mov    $0x2,%edi
    1648:	e8 c3 f7 ff ff       	callq  e10 <signal@plt>
    164d:	48 83 c4 08          	add    $0x8,%rsp
    1651:	c3                   	retq   

0000000000001652 <initialize_bomb_solve>:
    1652:	f3 c3                	repz retq 

0000000000001654 <blank_line>:
    1654:	55                   	push   %rbp
    1655:	53                   	push   %rbx
    1656:	48 83 ec 08          	sub    $0x8,%rsp
    165a:	48 89 fd             	mov    %rdi,%rbp
    165d:	0f b6 5d 00          	movzbl 0x0(%rbp),%ebx
    1661:	84 db                	test   %bl,%bl
    1663:	74 1e                	je     1683 <blank_line+0x2f>
    1665:	e8 66 f8 ff ff       	callq  ed0 <__ctype_b_loc@plt>
    166a:	48 83 c5 01          	add    $0x1,%rbp
    166e:	48 0f be db          	movsbq %bl,%rbx
    1672:	48 8b 00             	mov    (%rax),%rax
    1675:	f6 44 58 01 20       	testb  $0x20,0x1(%rax,%rbx,2)
    167a:	75 e1                	jne    165d <blank_line+0x9>
    167c:	b8 00 00 00 00       	mov    $0x0,%eax
    1681:	eb 05                	jmp    1688 <blank_line+0x34>
    1683:	b8 01 00 00 00       	mov    $0x1,%eax
    1688:	48 83 c4 08          	add    $0x8,%rsp
    168c:	5b                   	pop    %rbx
    168d:	5d                   	pop    %rbp
    168e:	c3                   	retq   

000000000000168f <skip>:
    168f:	55                   	push   %rbp
    1690:	53                   	push   %rbx
    1691:	48 83 ec 08          	sub    $0x8,%rsp
    1695:	48 8d 2d 04 30 20 00 	lea    0x203004(%rip),%rbp        # 2046a0 <input_strings>
    169c:	48 63 05 e9 2f 20 00 	movslq 0x202fe9(%rip),%rax        # 20468c <num_input_strings>
    16a3:	48 8d 3c 80          	lea    (%rax,%rax,4),%rdi
    16a7:	48 c1 e7 04          	shl    $0x4,%rdi
    16ab:	48 01 ef             	add    %rbp,%rdi
    16ae:	48 8b 15 db 2f 20 00 	mov    0x202fdb(%rip),%rdx        # 204690 <infile>
    16b5:	be 50 00 00 00       	mov    $0x50,%esi
    16ba:	e8 41 f7 ff ff       	callq  e00 <fgets@plt>
    16bf:	48 89 c3             	mov    %rax,%rbx
    16c2:	48 85 c0             	test   %rax,%rax
    16c5:	74 0c                	je     16d3 <skip+0x44>
    16c7:	48 89 c7             	mov    %rax,%rdi
    16ca:	e8 85 ff ff ff       	callq  1654 <blank_line>
    16cf:	85 c0                	test   %eax,%eax
    16d1:	75 c9                	jne    169c <skip+0xd>
    16d3:	48 89 d8             	mov    %rbx,%rax
    16d6:	48 83 c4 08          	add    $0x8,%rsp
    16da:	5b                   	pop    %rbx
    16db:	5d                   	pop    %rbp
    16dc:	c3                   	retq   

00000000000016dd <explode_bomb>:
    16dd:	48 83 ec 08          	sub    $0x8,%rsp
    16e1:	48 8d 3d 03 11 00 00 	lea    0x1103(%rip),%rdi        # 27eb <array.3415+0x14b>
    16e8:	e8 c3 f6 ff ff       	callq  db0 <puts@plt>
    16ed:	48 8d 3d 00 11 00 00 	lea    0x1100(%rip),%rdi        # 27f4 <array.3415+0x154>
    16f4:	e8 b7 f6 ff ff       	callq  db0 <puts@plt>
    16f9:	bf 08 00 00 00       	mov    $0x8,%edi
    16fe:	e8 8d f7 ff ff       	callq  e90 <exit@plt>

0000000000001703 <read_six_numbers>:
    1703:	48 83 ec 08          	sub    $0x8,%rsp
    1707:	48 89 f2             	mov    %rsi,%rdx
    170a:	48 8d 4e 04          	lea    0x4(%rsi),%rcx
    170e:	48 8d 46 14          	lea    0x14(%rsi),%rax
    1712:	50                   	push   %rax
    1713:	48 8d 46 10          	lea    0x10(%rsi),%rax
    1717:	50                   	push   %rax
    1718:	4c 8d 4e 0c          	lea    0xc(%rsi),%r9
    171c:	4c 8d 46 08          	lea    0x8(%rsi),%r8
    1720:	48 8d 35 e4 10 00 00 	lea    0x10e4(%rip),%rsi        # 280b <array.3415+0x16b>
    1727:	b8 00 00 00 00       	mov    $0x0,%eax
    172c:	e8 2f f7 ff ff       	callq  e60 <__isoc99_sscanf@plt>
    1731:	48 83 c4 10          	add    $0x10,%rsp
    1735:	83 f8 05             	cmp    $0x5,%eax
    1738:	7e 05                	jle    173f <read_six_numbers+0x3c>
    173a:	48 83 c4 08          	add    $0x8,%rsp
    173e:	c3                   	retq   
    173f:	e8 99 ff ff ff       	callq  16dd <explode_bomb>

0000000000001744 <read_line>:
    1744:	48 83 ec 08          	sub    $0x8,%rsp
    1748:	b8 00 00 00 00       	mov    $0x0,%eax
    174d:	e8 3d ff ff ff       	callq  168f <skip>
    1752:	48 85 c0             	test   %rax,%rax
    1755:	74 6f                	je     17c6 <read_line+0x82>
    1757:	8b 35 2f 2f 20 00    	mov    0x202f2f(%rip),%esi        # 20468c <num_input_strings>
    175d:	48 63 c6             	movslq %esi,%rax
    1760:	48 8d 14 80          	lea    (%rax,%rax,4),%rdx
    1764:	48 c1 e2 04          	shl    $0x4,%rdx
    1768:	48 8d 05 31 2f 20 00 	lea    0x202f31(%rip),%rax        # 2046a0 <input_strings>
    176f:	48 01 c2             	add    %rax,%rdx
    1772:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    1779:	b8 00 00 00 00       	mov    $0x0,%eax
    177e:	48 89 d7             	mov    %rdx,%rdi
    1781:	f2 ae                	repnz scas %es:(%rdi),%al
    1783:	48 f7 d1             	not    %rcx
    1786:	48 83 e9 01          	sub    $0x1,%rcx
    178a:	83 f9 4e             	cmp    $0x4e,%ecx
    178d:	0f 8f ab 00 00 00    	jg     183e <read_line+0xfa>
    1793:	83 e9 01             	sub    $0x1,%ecx
    1796:	48 63 c9             	movslq %ecx,%rcx
    1799:	48 63 c6             	movslq %esi,%rax
    179c:	48 8d 04 80          	lea    (%rax,%rax,4),%rax
    17a0:	48 c1 e0 04          	shl    $0x4,%rax
    17a4:	48 89 c7             	mov    %rax,%rdi
    17a7:	48 8d 05 f2 2e 20 00 	lea    0x202ef2(%rip),%rax        # 2046a0 <input_strings>
    17ae:	48 01 f8             	add    %rdi,%rax
    17b1:	c6 04 08 00          	movb   $0x0,(%rax,%rcx,1)
    17b5:	83 c6 01             	add    $0x1,%esi
    17b8:	89 35 ce 2e 20 00    	mov    %esi,0x202ece(%rip)        # 20468c <num_input_strings>
    17be:	48 89 d0             	mov    %rdx,%rax
    17c1:	48 83 c4 08          	add    $0x8,%rsp
    17c5:	c3                   	retq   
    17c6:	48 8b 05 a3 2e 20 00 	mov    0x202ea3(%rip),%rax        # 204670 <stdin@@GLIBC_2.2.5>
    17cd:	48 39 05 bc 2e 20 00 	cmp    %rax,0x202ebc(%rip)        # 204690 <infile>
    17d4:	74 1b                	je     17f1 <read_line+0xad>
    17d6:	48 8d 3d 5e 10 00 00 	lea    0x105e(%rip),%rdi        # 283b <array.3415+0x19b>
    17dd:	e8 9e f5 ff ff       	callq  d80 <getenv@plt>
    17e2:	48 85 c0             	test   %rax,%rax
    17e5:	74 20                	je     1807 <read_line+0xc3>
    17e7:	bf 00 00 00 00       	mov    $0x0,%edi
    17ec:	e8 9f f6 ff ff       	callq  e90 <exit@plt>
    17f1:	48 8d 3d 25 10 00 00 	lea    0x1025(%rip),%rdi        # 281d <array.3415+0x17d>
    17f8:	e8 b3 f5 ff ff       	callq  db0 <puts@plt>
    17fd:	bf 08 00 00 00       	mov    $0x8,%edi
    1802:	e8 89 f6 ff ff       	callq  e90 <exit@plt>
    1807:	48 8b 05 62 2e 20 00 	mov    0x202e62(%rip),%rax        # 204670 <stdin@@GLIBC_2.2.5>
    180e:	48 89 05 7b 2e 20 00 	mov    %rax,0x202e7b(%rip)        # 204690 <infile>
    1815:	b8 00 00 00 00       	mov    $0x0,%eax
    181a:	e8 70 fe ff ff       	callq  168f <skip>
    181f:	48 85 c0             	test   %rax,%rax
    1822:	0f 85 2f ff ff ff    	jne    1757 <read_line+0x13>
    1828:	48 8d 3d ee 0f 00 00 	lea    0xfee(%rip),%rdi        # 281d <array.3415+0x17d>
    182f:	e8 7c f5 ff ff       	callq  db0 <puts@plt>
    1834:	bf 00 00 00 00       	mov    $0x0,%edi
    1839:	e8 52 f6 ff ff       	callq  e90 <exit@plt>
    183e:	48 8d 3d 01 10 00 00 	lea    0x1001(%rip),%rdi        # 2846 <array.3415+0x1a6>
    1845:	e8 66 f5 ff ff       	callq  db0 <puts@plt>
    184a:	8b 05 3c 2e 20 00    	mov    0x202e3c(%rip),%eax        # 20468c <num_input_strings>
    1850:	8d 50 01             	lea    0x1(%rax),%edx
    1853:	89 15 33 2e 20 00    	mov    %edx,0x202e33(%rip)        # 20468c <num_input_strings>
    1859:	48 98                	cltq   
    185b:	48 6b c0 50          	imul   $0x50,%rax,%rax
    185f:	48 8d 15 3a 2e 20 00 	lea    0x202e3a(%rip),%rdx        # 2046a0 <input_strings>
    1866:	48 be 2a 2a 2a 74 72 	movabs $0x636e7572742a2a2a,%rsi
    186d:	75 6e 63 
    1870:	48 bf 61 74 65 64 2a 	movabs $0x2a2a2a64657461,%rdi
    1877:	2a 2a 00 
    187a:	48 89 34 02          	mov    %rsi,(%rdx,%rax,1)
    187e:	48 89 7c 02 08       	mov    %rdi,0x8(%rdx,%rax,1)
    1883:	e8 55 fe ff ff       	callq  16dd <explode_bomb>

0000000000001888 <phase_defused>:
    1888:	83 3d fd 2d 20 00 06 	cmpl   $0x6,0x202dfd(%rip)        # 20468c <num_input_strings>
    188f:	74 02                	je     1893 <phase_defused+0xb>
    1891:	f3 c3                	repz retq 
    1893:	48 83 ec 68          	sub    $0x68,%rsp
    1897:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
    189c:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
    18a1:	4c 8d 44 24 10       	lea    0x10(%rsp),%r8
    18a6:	48 8d 35 b4 0f 00 00 	lea    0xfb4(%rip),%rsi        # 2861 <array.3415+0x1c1>
    18ad:	48 8d 3d dc 2e 20 00 	lea    0x202edc(%rip),%rdi        # 204790 <input_strings+0xf0>
    18b4:	b8 00 00 00 00       	mov    $0x0,%eax
    18b9:	e8 a2 f5 ff ff       	callq  e60 <__isoc99_sscanf@plt>
    18be:	83 f8 03             	cmp    $0x3,%eax
    18c1:	74 11                	je     18d4 <phase_defused+0x4c>
    18c3:	48 8d 3d d6 0e 00 00 	lea    0xed6(%rip),%rdi        # 27a0 <array.3415+0x100>
    18ca:	e8 e1 f4 ff ff       	callq  db0 <puts@plt>
    18cf:	48 83 c4 68          	add    $0x68,%rsp
    18d3:	c3                   	retq   
    18d4:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    18d9:	48 8d 35 8a 0f 00 00 	lea    0xf8a(%rip),%rsi        # 286a <array.3415+0x1ca>
    18e0:	e8 ec fc ff ff       	callq  15d1 <strings_not_equal>
    18e5:	85 c0                	test   %eax,%eax
    18e7:	75 da                	jne    18c3 <phase_defused+0x3b>
    18e9:	48 8d 3d 50 0e 00 00 	lea    0xe50(%rip),%rdi        # 2740 <array.3415+0xa0>
    18f0:	e8 bb f4 ff ff       	callq  db0 <puts@plt>
    18f5:	48 8d 3d 6c 0e 00 00 	lea    0xe6c(%rip),%rdi        # 2768 <array.3415+0xc8>
    18fc:	e8 af f4 ff ff       	callq  db0 <puts@plt>
    1901:	b8 00 00 00 00       	mov    $0x0,%eax
    1906:	e8 ce fb ff ff       	callq  14d9 <secret_phase>
    190b:	eb b6                	jmp    18c3 <phase_defused+0x3b>

000000000000190d <sigalrm_handler>:
    190d:	48 83 ec 08          	sub    $0x8,%rsp
    1911:	b9 00 00 00 00       	mov    $0x0,%ecx
    1916:	48 8d 15 a3 0f 00 00 	lea    0xfa3(%rip),%rdx        # 28c0 <array.3415+0x220>
    191d:	be 01 00 00 00       	mov    $0x1,%esi
    1922:	48 8b 3d 57 2d 20 00 	mov    0x202d57(%rip),%rdi        # 204680 <stderr@@GLIBC_2.2.5>
    1929:	b8 00 00 00 00       	mov    $0x0,%eax
    192e:	e8 7d f5 ff ff       	callq  eb0 <__fprintf_chk@plt>
    1933:	bf 01 00 00 00       	mov    $0x1,%edi
    1938:	e8 53 f5 ff ff       	callq  e90 <exit@plt>

000000000000193d <rio_readlineb>:
    193d:	41 56                	push   %r14
    193f:	41 55                	push   %r13
    1941:	41 54                	push   %r12
    1943:	55                   	push   %rbp
    1944:	53                   	push   %rbx
    1945:	48 89 fb             	mov    %rdi,%rbx
    1948:	49 89 f4             	mov    %rsi,%r12
    194b:	49 89 d6             	mov    %rdx,%r14
    194e:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    1954:	48 8d 6f 10          	lea    0x10(%rdi),%rbp
    1958:	48 83 fa 01          	cmp    $0x1,%rdx
    195c:	77 0c                	ja     196a <rio_readlineb+0x2d>
    195e:	eb 60                	jmp    19c0 <rio_readlineb+0x83>
    1960:	e8 2b f4 ff ff       	callq  d90 <__errno_location@plt>
    1965:	83 38 04             	cmpl   $0x4,(%rax)
    1968:	75 67                	jne    19d1 <rio_readlineb+0x94>
    196a:	8b 43 04             	mov    0x4(%rbx),%eax
    196d:	85 c0                	test   %eax,%eax
    196f:	7f 20                	jg     1991 <rio_readlineb+0x54>
    1971:	ba 00 20 00 00       	mov    $0x2000,%edx
    1976:	48 89 ee             	mov    %rbp,%rsi
    1979:	8b 3b                	mov    (%rbx),%edi
    197b:	e8 70 f4 ff ff       	callq  df0 <read@plt>
    1980:	89 43 04             	mov    %eax,0x4(%rbx)
    1983:	85 c0                	test   %eax,%eax
    1985:	78 d9                	js     1960 <rio_readlineb+0x23>
    1987:	85 c0                	test   %eax,%eax
    1989:	74 4f                	je     19da <rio_readlineb+0x9d>
    198b:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
    198f:	eb d9                	jmp    196a <rio_readlineb+0x2d>
    1991:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    1995:	0f b6 0a             	movzbl (%rdx),%ecx
    1998:	48 83 c2 01          	add    $0x1,%rdx
    199c:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    19a0:	83 e8 01             	sub    $0x1,%eax
    19a3:	89 43 04             	mov    %eax,0x4(%rbx)
    19a6:	49 83 c4 01          	add    $0x1,%r12
    19aa:	41 88 4c 24 ff       	mov    %cl,-0x1(%r12)
    19af:	80 f9 0a             	cmp    $0xa,%cl
    19b2:	74 0c                	je     19c0 <rio_readlineb+0x83>
    19b4:	41 83 c5 01          	add    $0x1,%r13d
    19b8:	49 63 c5             	movslq %r13d,%rax
    19bb:	4c 39 f0             	cmp    %r14,%rax
    19be:	72 aa                	jb     196a <rio_readlineb+0x2d>
    19c0:	41 c6 04 24 00       	movb   $0x0,(%r12)
    19c5:	49 63 c5             	movslq %r13d,%rax
    19c8:	5b                   	pop    %rbx
    19c9:	5d                   	pop    %rbp
    19ca:	41 5c                	pop    %r12
    19cc:	41 5d                	pop    %r13
    19ce:	41 5e                	pop    %r14
    19d0:	c3                   	retq   
    19d1:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    19d8:	eb 05                	jmp    19df <rio_readlineb+0xa2>
    19da:	b8 00 00 00 00       	mov    $0x0,%eax
    19df:	85 c0                	test   %eax,%eax
    19e1:	75 0d                	jne    19f0 <rio_readlineb+0xb3>
    19e3:	b8 00 00 00 00       	mov    $0x0,%eax
    19e8:	41 83 fd 01          	cmp    $0x1,%r13d
    19ec:	75 d2                	jne    19c0 <rio_readlineb+0x83>
    19ee:	eb d8                	jmp    19c8 <rio_readlineb+0x8b>
    19f0:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax
    19f7:	eb cf                	jmp    19c8 <rio_readlineb+0x8b>

00000000000019f9 <submitr>:
    19f9:	41 57                	push   %r15
    19fb:	41 56                	push   %r14
    19fd:	41 55                	push   %r13
    19ff:	41 54                	push   %r12
    1a01:	55                   	push   %rbp
    1a02:	53                   	push   %rbx
    1a03:	48 81 ec 68 a0 00 00 	sub    $0xa068,%rsp
    1a0a:	49 89 fd             	mov    %rdi,%r13
    1a0d:	89 f5                	mov    %esi,%ebp
    1a0f:	48 89 14 24          	mov    %rdx,(%rsp)
    1a13:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    1a18:	4c 89 44 24 10       	mov    %r8,0x10(%rsp)
    1a1d:	4c 89 cb             	mov    %r9,%rbx
    1a20:	4c 8b bc 24 a0 a0 00 	mov    0xa0a0(%rsp),%r15
    1a27:	00 
    1a28:	c7 84 24 3c 20 00 00 	movl   $0x0,0x203c(%rsp)
    1a2f:	00 00 00 00 
    1a33:	ba 00 00 00 00       	mov    $0x0,%edx
    1a38:	be 01 00 00 00       	mov    $0x1,%esi
    1a3d:	bf 02 00 00 00       	mov    $0x2,%edi
    1a42:	e8 a9 f4 ff ff       	callq  ef0 <socket@plt>
    1a47:	85 c0                	test   %eax,%eax
    1a49:	0f 88 41 01 00 00    	js     1b90 <submitr+0x197>
    1a4f:	41 89 c4             	mov    %eax,%r12d
    1a52:	4c 89 ef             	mov    %r13,%rdi
    1a55:	e8 c6 f3 ff ff       	callq  e20 <gethostbyname@plt>
    1a5a:	48 85 c0             	test   %rax,%rax
    1a5d:	0f 84 7d 01 00 00    	je     1be0 <submitr+0x1e7>
    1a63:	4c 8d ac 24 50 a0 00 	lea    0xa050(%rsp),%r13
    1a6a:	00 
    1a6b:	48 c7 84 24 52 a0 00 	movq   $0x0,0xa052(%rsp)
    1a72:	00 00 00 00 00 
    1a77:	c7 84 24 5a a0 00 00 	movl   $0x0,0xa05a(%rsp)
    1a7e:	00 00 00 00 
    1a82:	66 c7 84 24 5e a0 00 	movw   $0x0,0xa05e(%rsp)
    1a89:	00 00 00 
    1a8c:	66 c7 84 24 50 a0 00 	movw   $0x2,0xa050(%rsp)
    1a93:	00 02 00 
    1a96:	48 63 50 14          	movslq 0x14(%rax),%rdx
    1a9a:	48 8b 40 18          	mov    0x18(%rax),%rax
    1a9e:	48 8d bc 24 54 a0 00 	lea    0xa054(%rsp),%rdi
    1aa5:	00 
    1aa6:	b9 0c 00 00 00       	mov    $0xc,%ecx
    1aab:	48 8b 30             	mov    (%rax),%rsi
    1aae:	e8 7d f3 ff ff       	callq  e30 <__memmove_chk@plt>
    1ab3:	66 c1 cd 08          	ror    $0x8,%bp
    1ab7:	66 89 ac 24 52 a0 00 	mov    %bp,0xa052(%rsp)
    1abe:	00 
    1abf:	ba 10 00 00 00       	mov    $0x10,%edx
    1ac4:	4c 89 ee             	mov    %r13,%rsi
    1ac7:	44 89 e7             	mov    %r12d,%edi
    1aca:	e8 d1 f3 ff ff       	callq  ea0 <connect@plt>
    1acf:	85 c0                	test   %eax,%eax
    1ad1:	0f 88 74 01 00 00    	js     1c4b <submitr+0x252>
    1ad7:	49 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%r9
    1ade:	b8 00 00 00 00       	mov    $0x0,%eax
    1ae3:	4c 89 c9             	mov    %r9,%rcx
    1ae6:	48 89 df             	mov    %rbx,%rdi
    1ae9:	f2 ae                	repnz scas %es:(%rdi),%al
    1aeb:	48 89 ce             	mov    %rcx,%rsi
    1aee:	48 f7 d6             	not    %rsi
    1af1:	4c 89 c9             	mov    %r9,%rcx
    1af4:	48 8b 3c 24          	mov    (%rsp),%rdi
    1af8:	f2 ae                	repnz scas %es:(%rdi),%al
    1afa:	49 89 c8             	mov    %rcx,%r8
    1afd:	4c 89 c9             	mov    %r9,%rcx
    1b00:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    1b05:	f2 ae                	repnz scas %es:(%rdi),%al
    1b07:	48 f7 d1             	not    %rcx
    1b0a:	48 89 ca             	mov    %rcx,%rdx
    1b0d:	4c 89 c9             	mov    %r9,%rcx
    1b10:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    1b15:	f2 ae                	repnz scas %es:(%rdi),%al
    1b17:	4c 29 c2             	sub    %r8,%rdx
    1b1a:	48 29 ca             	sub    %rcx,%rdx
    1b1d:	48 8d 44 76 fd       	lea    -0x3(%rsi,%rsi,2),%rax
    1b22:	48 8d 44 02 7b       	lea    0x7b(%rdx,%rax,1),%rax
    1b27:	48 3d 00 20 00 00    	cmp    $0x2000,%rax
    1b2d:	0f 87 75 01 00 00    	ja     1ca8 <submitr+0x2af>
    1b33:	48 8d 94 24 40 40 00 	lea    0x4040(%rsp),%rdx
    1b3a:	00 
    1b3b:	b9 00 04 00 00       	mov    $0x400,%ecx
    1b40:	b8 00 00 00 00       	mov    $0x0,%eax
    1b45:	48 89 d7             	mov    %rdx,%rdi
    1b48:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    1b4b:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    1b52:	48 89 df             	mov    %rbx,%rdi
    1b55:	f2 ae                	repnz scas %es:(%rdi),%al
    1b57:	48 89 ce             	mov    %rcx,%rsi
    1b5a:	48 f7 d6             	not    %rsi
    1b5d:	48 89 f1             	mov    %rsi,%rcx
    1b60:	48 83 e9 01          	sub    $0x1,%rcx
    1b64:	85 c9                	test   %ecx,%ecx
    1b66:	0f 84 28 06 00 00    	je     2194 <submitr+0x79b>
    1b6c:	8d 41 ff             	lea    -0x1(%rcx),%eax
    1b6f:	4c 8d 74 03 01       	lea    0x1(%rbx,%rax,1),%r14
    1b74:	48 89 d5             	mov    %rdx,%rbp
    1b77:	48 8d 44 24 28       	lea    0x28(%rsp),%rax
    1b7c:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1b81:	49 bd d9 ff 00 00 00 	movabs $0x2000000000ffd9,%r13
    1b88:	00 20 00 
    1b8b:	e9 a6 01 00 00       	jmpq   1d36 <submitr+0x33d>
    1b90:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    1b97:	3a 20 43 
    1b9a:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    1ba1:	20 75 6e 
    1ba4:	49 89 07             	mov    %rax,(%r15)
    1ba7:	49 89 57 08          	mov    %rdx,0x8(%r15)
    1bab:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    1bb2:	74 6f 20 
    1bb5:	48 ba 63 72 65 61 74 	movabs $0x7320657461657263,%rdx
    1bbc:	65 20 73 
    1bbf:	49 89 47 10          	mov    %rax,0x10(%r15)
    1bc3:	49 89 57 18          	mov    %rdx,0x18(%r15)
    1bc7:	41 c7 47 20 6f 63 6b 	movl   $0x656b636f,0x20(%r15)
    1bce:	65 
    1bcf:	66 41 c7 47 24 74 00 	movw   $0x74,0x24(%r15)
    1bd6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1bdb:	e9 a2 04 00 00       	jmpq   2082 <submitr+0x689>
    1be0:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
    1be7:	3a 20 44 
    1bea:	48 ba 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rdx
    1bf1:	20 75 6e 
    1bf4:	49 89 07             	mov    %rax,(%r15)
    1bf7:	49 89 57 08          	mov    %rdx,0x8(%r15)
    1bfb:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    1c02:	74 6f 20 
    1c05:	48 ba 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rdx
    1c0c:	76 65 20 
    1c0f:	49 89 47 10          	mov    %rax,0x10(%r15)
    1c13:	49 89 57 18          	mov    %rdx,0x18(%r15)
    1c17:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
    1c1e:	72 20 61 
    1c21:	49 89 47 20          	mov    %rax,0x20(%r15)
    1c25:	41 c7 47 28 64 64 72 	movl   $0x65726464,0x28(%r15)
    1c2c:	65 
    1c2d:	66 41 c7 47 2c 73 73 	movw   $0x7373,0x2c(%r15)
    1c34:	41 c6 47 2e 00       	movb   $0x0,0x2e(%r15)
    1c39:	44 89 e7             	mov    %r12d,%edi
    1c3c:	e8 9f f1 ff ff       	callq  de0 <close@plt>
    1c41:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1c46:	e9 37 04 00 00       	jmpq   2082 <submitr+0x689>
    1c4b:	48 b8 45 72 72 6f 72 	movabs $0x55203a726f727245,%rax
    1c52:	3a 20 55 
    1c55:	48 ba 6e 61 62 6c 65 	movabs $0x6f7420656c62616e,%rdx
    1c5c:	20 74 6f 
    1c5f:	49 89 07             	mov    %rax,(%r15)
    1c62:	49 89 57 08          	mov    %rdx,0x8(%r15)
    1c66:	48 b8 20 63 6f 6e 6e 	movabs $0x7463656e6e6f6320,%rax
    1c6d:	65 63 74 
    1c70:	48 ba 20 74 6f 20 74 	movabs $0x20656874206f7420,%rdx
    1c77:	68 65 20 
    1c7a:	49 89 47 10          	mov    %rax,0x10(%r15)
    1c7e:	49 89 57 18          	mov    %rdx,0x18(%r15)
    1c82:	41 c7 47 20 73 65 72 	movl   $0x76726573,0x20(%r15)
    1c89:	76 
    1c8a:	66 41 c7 47 24 65 72 	movw   $0x7265,0x24(%r15)
    1c91:	41 c6 47 26 00       	movb   $0x0,0x26(%r15)
    1c96:	44 89 e7             	mov    %r12d,%edi
    1c99:	e8 42 f1 ff ff       	callq  de0 <close@plt>
    1c9e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1ca3:	e9 da 03 00 00       	jmpq   2082 <submitr+0x689>
    1ca8:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
    1caf:	3a 20 52 
    1cb2:	48 ba 65 73 75 6c 74 	movabs $0x747320746c757365,%rdx
    1cb9:	20 73 74 
    1cbc:	49 89 07             	mov    %rax,(%r15)
    1cbf:	49 89 57 08          	mov    %rdx,0x8(%r15)
    1cc3:	48 b8 72 69 6e 67 20 	movabs $0x6f6f7420676e6972,%rax
    1cca:	74 6f 6f 
    1ccd:	48 ba 20 6c 61 72 67 	movabs $0x202e656772616c20,%rdx
    1cd4:	65 2e 20 
    1cd7:	49 89 47 10          	mov    %rax,0x10(%r15)
    1cdb:	49 89 57 18          	mov    %rdx,0x18(%r15)
    1cdf:	48 b8 49 6e 63 72 65 	movabs $0x6573616572636e49,%rax
    1ce6:	61 73 65 
    1ce9:	48 ba 20 53 55 42 4d 	movabs $0x5254494d42555320,%rdx
    1cf0:	49 54 52 
    1cf3:	49 89 47 20          	mov    %rax,0x20(%r15)
    1cf7:	49 89 57 28          	mov    %rdx,0x28(%r15)
    1cfb:	48 b8 5f 4d 41 58 42 	movabs $0x46554258414d5f,%rax
    1d02:	55 46 00 
    1d05:	49 89 47 30          	mov    %rax,0x30(%r15)
    1d09:	44 89 e7             	mov    %r12d,%edi
    1d0c:	e8 cf f0 ff ff       	callq  de0 <close@plt>
    1d11:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1d16:	e9 67 03 00 00       	jmpq   2082 <submitr+0x689>
    1d1b:	49 0f a3 c5          	bt     %rax,%r13
    1d1f:	73 21                	jae    1d42 <submitr+0x349>
    1d21:	44 88 45 00          	mov    %r8b,0x0(%rbp)
    1d25:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
    1d29:	48 83 c3 01          	add    $0x1,%rbx
    1d2d:	4c 39 f3             	cmp    %r14,%rbx
    1d30:	0f 84 5e 04 00 00    	je     2194 <submitr+0x79b>
    1d36:	44 0f b6 03          	movzbl (%rbx),%r8d
    1d3a:	41 8d 40 d6          	lea    -0x2a(%r8),%eax
    1d3e:	3c 35                	cmp    $0x35,%al
    1d40:	76 d9                	jbe    1d1b <submitr+0x322>
    1d42:	44 89 c0             	mov    %r8d,%eax
    1d45:	83 e0 df             	and    $0xffffffdf,%eax
    1d48:	83 e8 41             	sub    $0x41,%eax
    1d4b:	3c 19                	cmp    $0x19,%al
    1d4d:	76 d2                	jbe    1d21 <submitr+0x328>
    1d4f:	41 80 f8 20          	cmp    $0x20,%r8b
    1d53:	74 54                	je     1da9 <submitr+0x3b0>
    1d55:	41 8d 40 e0          	lea    -0x20(%r8),%eax
    1d59:	3c 5f                	cmp    $0x5f,%al
    1d5b:	76 0a                	jbe    1d67 <submitr+0x36e>
    1d5d:	41 80 f8 09          	cmp    $0x9,%r8b
    1d61:	0f 85 a0 03 00 00    	jne    2107 <submitr+0x70e>
    1d67:	45 0f b6 c0          	movzbl %r8b,%r8d
    1d6b:	48 8d 0d 1e 0c 00 00 	lea    0xc1e(%rip),%rcx        # 2990 <array.3415+0x2f0>
    1d72:	ba 08 00 00 00       	mov    $0x8,%edx
    1d77:	be 01 00 00 00       	mov    $0x1,%esi
    1d7c:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    1d81:	b8 00 00 00 00       	mov    $0x0,%eax
    1d86:	e8 55 f1 ff ff       	callq  ee0 <__sprintf_chk@plt>
    1d8b:	0f b6 44 24 28       	movzbl 0x28(%rsp),%eax
    1d90:	88 45 00             	mov    %al,0x0(%rbp)
    1d93:	0f b6 44 24 29       	movzbl 0x29(%rsp),%eax
    1d98:	88 45 01             	mov    %al,0x1(%rbp)
    1d9b:	0f b6 44 24 2a       	movzbl 0x2a(%rsp),%eax
    1da0:	88 45 02             	mov    %al,0x2(%rbp)
    1da3:	48 8d 6d 03          	lea    0x3(%rbp),%rbp
    1da7:	eb 80                	jmp    1d29 <submitr+0x330>
    1da9:	c6 45 00 2b          	movb   $0x2b,0x0(%rbp)
    1dad:	48 8d 6d 01          	lea    0x1(%rbp),%rbp
    1db1:	e9 73 ff ff ff       	jmpq   1d29 <submitr+0x330>
    1db6:	48 01 c5             	add    %rax,%rbp
    1db9:	48 29 c3             	sub    %rax,%rbx
    1dbc:	74 26                	je     1de4 <submitr+0x3eb>
    1dbe:	48 89 da             	mov    %rbx,%rdx
    1dc1:	48 89 ee             	mov    %rbp,%rsi
    1dc4:	44 89 e7             	mov    %r12d,%edi
    1dc7:	e8 f4 ef ff ff       	callq  dc0 <write@plt>
    1dcc:	48 85 c0             	test   %rax,%rax
    1dcf:	7f e5                	jg     1db6 <submitr+0x3bd>
    1dd1:	e8 ba ef ff ff       	callq  d90 <__errno_location@plt>
    1dd6:	83 38 04             	cmpl   $0x4,(%rax)
    1dd9:	0f 85 44 01 00 00    	jne    1f23 <submitr+0x52a>
    1ddf:	4c 89 f0             	mov    %r14,%rax
    1de2:	eb d2                	jmp    1db6 <submitr+0x3bd>
    1de4:	4d 85 ed             	test   %r13,%r13
    1de7:	0f 88 36 01 00 00    	js     1f23 <submitr+0x52a>
    1ded:	44 89 a4 24 40 80 00 	mov    %r12d,0x8040(%rsp)
    1df4:	00 
    1df5:	c7 84 24 44 80 00 00 	movl   $0x0,0x8044(%rsp)
    1dfc:	00 00 00 00 
    1e00:	48 8d bc 24 40 80 00 	lea    0x8040(%rsp),%rdi
    1e07:	00 
    1e08:	48 8d 47 10          	lea    0x10(%rdi),%rax
    1e0c:	48 89 84 24 48 80 00 	mov    %rax,0x8048(%rsp)
    1e13:	00 
    1e14:	48 8d b4 24 40 60 00 	lea    0x6040(%rsp),%rsi
    1e1b:	00 
    1e1c:	ba 00 20 00 00       	mov    $0x2000,%edx
    1e21:	e8 17 fb ff ff       	callq  193d <rio_readlineb>
    1e26:	48 85 c0             	test   %rax,%rax
    1e29:	0f 8e 53 01 00 00    	jle    1f82 <submitr+0x589>
    1e2f:	48 8d 8c 24 3c 20 00 	lea    0x203c(%rsp),%rcx
    1e36:	00 
    1e37:	48 8d 94 24 40 20 00 	lea    0x2040(%rsp),%rdx
    1e3e:	00 
    1e3f:	48 8d bc 24 40 60 00 	lea    0x6040(%rsp),%rdi
    1e46:	00 
    1e47:	4c 8d 44 24 30       	lea    0x30(%rsp),%r8
    1e4c:	48 8d 35 44 0b 00 00 	lea    0xb44(%rip),%rsi        # 2997 <array.3415+0x2f7>
    1e53:	b8 00 00 00 00       	mov    $0x0,%eax
    1e58:	e8 03 f0 ff ff       	callq  e60 <__isoc99_sscanf@plt>
    1e5d:	44 8b 84 24 3c 20 00 	mov    0x203c(%rsp),%r8d
    1e64:	00 
    1e65:	41 81 f8 c8 00 00 00 	cmp    $0xc8,%r8d
    1e6c:	0f 85 84 01 00 00    	jne    1ff6 <submitr+0x5fd>
    1e72:	48 8d 9c 24 40 60 00 	lea    0x6040(%rsp),%rbx
    1e79:	00 
    1e7a:	48 8d 2d 27 0b 00 00 	lea    0xb27(%rip),%rbp        # 29a8 <array.3415+0x308>
    1e81:	4c 8d ac 24 40 80 00 	lea    0x8040(%rsp),%r13
    1e88:	00 
    1e89:	b9 03 00 00 00       	mov    $0x3,%ecx
    1e8e:	48 89 de             	mov    %rbx,%rsi
    1e91:	48 89 ef             	mov    %rbp,%rdi
    1e94:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    1e96:	0f 97 c2             	seta   %dl
    1e99:	0f 92 c0             	setb   %al
    1e9c:	38 c2                	cmp    %al,%dl
    1e9e:	0f 84 86 01 00 00    	je     202a <submitr+0x631>
    1ea4:	ba 00 20 00 00       	mov    $0x2000,%edx
    1ea9:	48 89 de             	mov    %rbx,%rsi
    1eac:	4c 89 ef             	mov    %r13,%rdi
    1eaf:	e8 89 fa ff ff       	callq  193d <rio_readlineb>
    1eb4:	48 85 c0             	test   %rax,%rax
    1eb7:	7f d0                	jg     1e89 <submitr+0x490>
    1eb9:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    1ec0:	3a 20 43 
    1ec3:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    1eca:	20 75 6e 
    1ecd:	49 89 07             	mov    %rax,(%r15)
    1ed0:	49 89 57 08          	mov    %rdx,0x8(%r15)
    1ed4:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    1edb:	74 6f 20 
    1ede:	48 ba 72 65 61 64 20 	movabs $0x6165682064616572,%rdx
    1ee5:	68 65 61 
    1ee8:	49 89 47 10          	mov    %rax,0x10(%r15)
    1eec:	49 89 57 18          	mov    %rdx,0x18(%r15)
    1ef0:	48 b8 64 65 72 73 20 	movabs $0x6f72662073726564,%rax
    1ef7:	66 72 6f 
    1efa:	48 ba 6d 20 73 65 72 	movabs $0x726576726573206d,%rdx
    1f01:	76 65 72 
    1f04:	49 89 47 20          	mov    %rax,0x20(%r15)
    1f08:	49 89 57 28          	mov    %rdx,0x28(%r15)
    1f0c:	41 c6 47 30 00       	movb   $0x0,0x30(%r15)
    1f11:	44 89 e7             	mov    %r12d,%edi
    1f14:	e8 c7 ee ff ff       	callq  de0 <close@plt>
    1f19:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1f1e:	e9 5f 01 00 00       	jmpq   2082 <submitr+0x689>
    1f23:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    1f2a:	3a 20 43 
    1f2d:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    1f34:	20 75 6e 
    1f37:	49 89 07             	mov    %rax,(%r15)
    1f3a:	49 89 57 08          	mov    %rdx,0x8(%r15)
    1f3e:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    1f45:	74 6f 20 
    1f48:	48 ba 77 72 69 74 65 	movabs $0x6f74206574697277,%rdx
    1f4f:	20 74 6f 
    1f52:	49 89 47 10          	mov    %rax,0x10(%r15)
    1f56:	49 89 57 18          	mov    %rdx,0x18(%r15)
    1f5a:	48 b8 20 74 68 65 20 	movabs $0x7265732065687420,%rax
    1f61:	73 65 72 
    1f64:	49 89 47 20          	mov    %rax,0x20(%r15)
    1f68:	41 c7 47 28 76 65 72 	movl   $0x726576,0x28(%r15)
    1f6f:	00 
    1f70:	44 89 e7             	mov    %r12d,%edi
    1f73:	e8 68 ee ff ff       	callq  de0 <close@plt>
    1f78:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1f7d:	e9 00 01 00 00       	jmpq   2082 <submitr+0x689>
    1f82:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    1f89:	3a 20 43 
    1f8c:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    1f93:	20 75 6e 
    1f96:	49 89 07             	mov    %rax,(%r15)
    1f99:	49 89 57 08          	mov    %rdx,0x8(%r15)
    1f9d:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    1fa4:	74 6f 20 
    1fa7:	48 ba 72 65 61 64 20 	movabs $0x7269662064616572,%rdx
    1fae:	66 69 72 
    1fb1:	49 89 47 10          	mov    %rax,0x10(%r15)
    1fb5:	49 89 57 18          	mov    %rdx,0x18(%r15)
    1fb9:	48 b8 73 74 20 68 65 	movabs $0x6564616568207473,%rax
    1fc0:	61 64 65 
    1fc3:	48 ba 72 20 66 72 6f 	movabs $0x73206d6f72662072,%rdx
    1fca:	6d 20 73 
    1fcd:	49 89 47 20          	mov    %rax,0x20(%r15)
    1fd1:	49 89 57 28          	mov    %rdx,0x28(%r15)
    1fd5:	41 c7 47 30 65 72 76 	movl   $0x65767265,0x30(%r15)
    1fdc:	65 
    1fdd:	66 41 c7 47 34 72 00 	movw   $0x72,0x34(%r15)
    1fe4:	44 89 e7             	mov    %r12d,%edi
    1fe7:	e8 f4 ed ff ff       	callq  de0 <close@plt>
    1fec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1ff1:	e9 8c 00 00 00       	jmpq   2082 <submitr+0x689>
    1ff6:	4c 8d 4c 24 30       	lea    0x30(%rsp),%r9
    1ffb:	48 8d 0d e6 08 00 00 	lea    0x8e6(%rip),%rcx        # 28e8 <array.3415+0x248>
    2002:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    2009:	be 01 00 00 00       	mov    $0x1,%esi
    200e:	4c 89 ff             	mov    %r15,%rdi
    2011:	b8 00 00 00 00       	mov    $0x0,%eax
    2016:	e8 c5 ee ff ff       	callq  ee0 <__sprintf_chk@plt>
    201b:	44 89 e7             	mov    %r12d,%edi
    201e:	e8 bd ed ff ff       	callq  de0 <close@plt>
    2023:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2028:	eb 58                	jmp    2082 <submitr+0x689>
    202a:	48 8d b4 24 40 60 00 	lea    0x6040(%rsp),%rsi
    2031:	00 
    2032:	48 8d bc 24 40 80 00 	lea    0x8040(%rsp),%rdi
    2039:	00 
    203a:	ba 00 20 00 00       	mov    $0x2000,%edx
    203f:	e8 f9 f8 ff ff       	callq  193d <rio_readlineb>
    2044:	48 85 c0             	test   %rax,%rax
    2047:	7e 4b                	jle    2094 <submitr+0x69b>
    2049:	48 8d b4 24 40 60 00 	lea    0x6040(%rsp),%rsi
    2050:	00 
    2051:	4c 89 ff             	mov    %r15,%rdi
    2054:	e8 47 ed ff ff       	callq  da0 <strcpy@plt>
    2059:	44 89 e7             	mov    %r12d,%edi
    205c:	e8 7f ed ff ff       	callq  de0 <close@plt>
    2061:	b9 03 00 00 00       	mov    $0x3,%ecx
    2066:	48 8d 3d 3e 09 00 00 	lea    0x93e(%rip),%rdi        # 29ab <array.3415+0x30b>
    206d:	4c 89 fe             	mov    %r15,%rsi
    2070:	f3 a6                	repz cmpsb %es:(%rdi),%ds:(%rsi)
    2072:	0f 97 c2             	seta   %dl
    2075:	0f 92 c0             	setb   %al
    2078:	38 c2                	cmp    %al,%dl
    207a:	0f 95 c0             	setne  %al
    207d:	0f b6 c0             	movzbl %al,%eax
    2080:	f7 d8                	neg    %eax
    2082:	48 81 c4 68 a0 00 00 	add    $0xa068,%rsp
    2089:	5b                   	pop    %rbx
    208a:	5d                   	pop    %rbp
    208b:	41 5c                	pop    %r12
    208d:	41 5d                	pop    %r13
    208f:	41 5e                	pop    %r14
    2091:	41 5f                	pop    %r15
    2093:	c3                   	retq   
    2094:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    209b:	3a 20 43 
    209e:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    20a5:	20 75 6e 
    20a8:	49 89 07             	mov    %rax,(%r15)
    20ab:	49 89 57 08          	mov    %rdx,0x8(%r15)
    20af:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    20b6:	74 6f 20 
    20b9:	48 ba 72 65 61 64 20 	movabs $0x6174732064616572,%rdx
    20c0:	73 74 61 
    20c3:	49 89 47 10          	mov    %rax,0x10(%r15)
    20c7:	49 89 57 18          	mov    %rdx,0x18(%r15)
    20cb:	48 b8 74 75 73 20 6d 	movabs $0x7373656d20737574,%rax
    20d2:	65 73 73 
    20d5:	48 ba 61 67 65 20 66 	movabs $0x6d6f726620656761,%rdx
    20dc:	72 6f 6d 
    20df:	49 89 47 20          	mov    %rax,0x20(%r15)
    20e3:	49 89 57 28          	mov    %rdx,0x28(%r15)
    20e7:	48 b8 20 73 65 72 76 	movabs $0x72657672657320,%rax
    20ee:	65 72 00 
    20f1:	49 89 47 30          	mov    %rax,0x30(%r15)
    20f5:	44 89 e7             	mov    %r12d,%edi
    20f8:	e8 e3 ec ff ff       	callq  de0 <close@plt>
    20fd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2102:	e9 7b ff ff ff       	jmpq   2082 <submitr+0x689>
    2107:	48 b8 45 72 72 6f 72 	movabs $0x52203a726f727245,%rax
    210e:	3a 20 52 
    2111:	48 ba 65 73 75 6c 74 	movabs $0x747320746c757365,%rdx
    2118:	20 73 74 
    211b:	49 89 07             	mov    %rax,(%r15)
    211e:	49 89 57 08          	mov    %rdx,0x8(%r15)
    2122:	48 b8 72 69 6e 67 20 	movabs $0x6e6f6320676e6972,%rax
    2129:	63 6f 6e 
    212c:	48 ba 74 61 69 6e 73 	movabs $0x6e6120736e696174,%rdx
    2133:	20 61 6e 
    2136:	49 89 47 10          	mov    %rax,0x10(%r15)
    213a:	49 89 57 18          	mov    %rdx,0x18(%r15)
    213e:	48 b8 20 69 6c 6c 65 	movabs $0x6c6167656c6c6920,%rax
    2145:	67 61 6c 
    2148:	48 ba 20 6f 72 20 75 	movabs $0x72706e7520726f20,%rdx
    214f:	6e 70 72 
    2152:	49 89 47 20          	mov    %rax,0x20(%r15)
    2156:	49 89 57 28          	mov    %rdx,0x28(%r15)
    215a:	48 b8 69 6e 74 61 62 	movabs $0x20656c6261746e69,%rax
    2161:	6c 65 20 
    2164:	48 ba 63 68 61 72 61 	movabs $0x6574636172616863,%rdx
    216b:	63 74 65 
    216e:	49 89 47 30          	mov    %rax,0x30(%r15)
    2172:	49 89 57 38          	mov    %rdx,0x38(%r15)
    2176:	66 41 c7 47 40 72 2e 	movw   $0x2e72,0x40(%r15)
    217d:	41 c6 47 42 00       	movb   $0x0,0x42(%r15)
    2182:	44 89 e7             	mov    %r12d,%edi
    2185:	e8 56 ec ff ff       	callq  de0 <close@plt>
    218a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    218f:	e9 ee fe ff ff       	jmpq   2082 <submitr+0x689>
    2194:	48 8d 9c 24 40 60 00 	lea    0x6040(%rsp),%rbx
    219b:	00 
    219c:	48 8d 84 24 40 40 00 	lea    0x4040(%rsp),%rax
    21a3:	00 
    21a4:	50                   	push   %rax
    21a5:	ff 74 24 18          	pushq  0x18(%rsp)
    21a9:	4c 8b 4c 24 18       	mov    0x18(%rsp),%r9
    21ae:	4c 8b 44 24 10       	mov    0x10(%rsp),%r8
    21b3:	48 8d 0d 5e 07 00 00 	lea    0x75e(%rip),%rcx        # 2918 <array.3415+0x278>
    21ba:	ba 00 20 00 00       	mov    $0x2000,%edx
    21bf:	be 01 00 00 00       	mov    $0x1,%esi
    21c4:	48 89 df             	mov    %rbx,%rdi
    21c7:	b8 00 00 00 00       	mov    $0x0,%eax
    21cc:	e8 0f ed ff ff       	callq  ee0 <__sprintf_chk@plt>
    21d1:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    21d8:	b8 00 00 00 00       	mov    $0x0,%eax
    21dd:	48 89 df             	mov    %rbx,%rdi
    21e0:	f2 ae                	repnz scas %es:(%rdi),%al
    21e2:	48 89 ce             	mov    %rcx,%rsi
    21e5:	48 f7 d6             	not    %rsi
    21e8:	4c 8d 6e ff          	lea    -0x1(%rsi),%r13
    21ec:	48 83 c4 10          	add    $0x10,%rsp
    21f0:	4c 89 eb             	mov    %r13,%rbx
    21f3:	48 8d ac 24 40 60 00 	lea    0x6040(%rsp),%rbp
    21fa:	00 
    21fb:	41 be 00 00 00 00    	mov    $0x0,%r14d
    2201:	4d 85 ed             	test   %r13,%r13
    2204:	0f 85 b4 fb ff ff    	jne    1dbe <submitr+0x3c5>
    220a:	e9 de fb ff ff       	jmpq   1ded <submitr+0x3f4>

000000000000220f <init_timeout>:
    220f:	85 ff                	test   %edi,%edi
    2211:	74 25                	je     2238 <init_timeout+0x29>
    2213:	53                   	push   %rbx
    2214:	89 fb                	mov    %edi,%ebx
    2216:	48 8d 35 f0 f6 ff ff 	lea    -0x910(%rip),%rsi        # 190d <sigalrm_handler>
    221d:	bf 0e 00 00 00       	mov    $0xe,%edi
    2222:	e8 e9 eb ff ff       	callq  e10 <signal@plt>
    2227:	85 db                	test   %ebx,%ebx
    2229:	bf 00 00 00 00       	mov    $0x0,%edi
    222e:	0f 49 fb             	cmovns %ebx,%edi
    2231:	e8 9a eb ff ff       	callq  dd0 <alarm@plt>
    2236:	5b                   	pop    %rbx
    2237:	c3                   	retq   
    2238:	f3 c3                	repz retq 

000000000000223a <init_driver>:
    223a:	41 54                	push   %r12
    223c:	55                   	push   %rbp
    223d:	53                   	push   %rbx
    223e:	48 83 ec 10          	sub    $0x10,%rsp
    2242:	49 89 fc             	mov    %rdi,%r12
    2245:	be 01 00 00 00       	mov    $0x1,%esi
    224a:	bf 0d 00 00 00       	mov    $0xd,%edi
    224f:	e8 bc eb ff ff       	callq  e10 <signal@plt>
    2254:	be 01 00 00 00       	mov    $0x1,%esi
    2259:	bf 1d 00 00 00       	mov    $0x1d,%edi
    225e:	e8 ad eb ff ff       	callq  e10 <signal@plt>
    2263:	be 01 00 00 00       	mov    $0x1,%esi
    2268:	bf 1d 00 00 00       	mov    $0x1d,%edi
    226d:	e8 9e eb ff ff       	callq  e10 <signal@plt>
    2272:	ba 00 00 00 00       	mov    $0x0,%edx
    2277:	be 01 00 00 00       	mov    $0x1,%esi
    227c:	bf 02 00 00 00       	mov    $0x2,%edi
    2281:	e8 6a ec ff ff       	callq  ef0 <socket@plt>
    2286:	85 c0                	test   %eax,%eax
    2288:	0f 88 8f 00 00 00    	js     231d <init_driver+0xe3>
    228e:	89 c3                	mov    %eax,%ebx
    2290:	48 8d 3d 17 07 00 00 	lea    0x717(%rip),%rdi        # 29ae <array.3415+0x30e>
    2297:	e8 84 eb ff ff       	callq  e20 <gethostbyname@plt>
    229c:	48 85 c0             	test   %rax,%rax
    229f:	0f 84 cb 00 00 00    	je     2370 <init_driver+0x136>
    22a5:	48 89 e5             	mov    %rsp,%rbp
    22a8:	48 c7 44 24 02 00 00 	movq   $0x0,0x2(%rsp)
    22af:	00 00 
    22b1:	c7 45 0a 00 00 00 00 	movl   $0x0,0xa(%rbp)
    22b8:	66 c7 45 0e 00 00    	movw   $0x0,0xe(%rbp)
    22be:	66 c7 04 24 02 00    	movw   $0x2,(%rsp)
    22c4:	48 63 50 14          	movslq 0x14(%rax),%rdx
    22c8:	48 8b 40 18          	mov    0x18(%rax),%rax
    22cc:	48 8d 7d 04          	lea    0x4(%rbp),%rdi
    22d0:	b9 0c 00 00 00       	mov    $0xc,%ecx
    22d5:	48 8b 30             	mov    (%rax),%rsi
    22d8:	e8 53 eb ff ff       	callq  e30 <__memmove_chk@plt>
    22dd:	66 c7 44 24 02 3b 6e 	movw   $0x6e3b,0x2(%rsp)
    22e4:	ba 10 00 00 00       	mov    $0x10,%edx
    22e9:	48 89 ee             	mov    %rbp,%rsi
    22ec:	89 df                	mov    %ebx,%edi
    22ee:	e8 ad eb ff ff       	callq  ea0 <connect@plt>
    22f3:	85 c0                	test   %eax,%eax
    22f5:	0f 88 e7 00 00 00    	js     23e2 <init_driver+0x1a8>
    22fb:	89 df                	mov    %ebx,%edi
    22fd:	e8 de ea ff ff       	callq  de0 <close@plt>
    2302:	66 41 c7 04 24 4f 4b 	movw   $0x4b4f,(%r12)
    2309:	41 c6 44 24 02 00    	movb   $0x0,0x2(%r12)
    230f:	b8 00 00 00 00       	mov    $0x0,%eax
    2314:	48 83 c4 10          	add    $0x10,%rsp
    2318:	5b                   	pop    %rbx
    2319:	5d                   	pop    %rbp
    231a:	41 5c                	pop    %r12
    231c:	c3                   	retq   
    231d:	48 b8 45 72 72 6f 72 	movabs $0x43203a726f727245,%rax
    2324:	3a 20 43 
    2327:	48 ba 6c 69 65 6e 74 	movabs $0x6e7520746e65696c,%rdx
    232e:	20 75 6e 
    2331:	49 89 04 24          	mov    %rax,(%r12)
    2335:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    233a:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    2341:	74 6f 20 
    2344:	48 ba 63 72 65 61 74 	movabs $0x7320657461657263,%rdx
    234b:	65 20 73 
    234e:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    2353:	49 89 54 24 18       	mov    %rdx,0x18(%r12)
    2358:	41 c7 44 24 20 6f 63 	movl   $0x656b636f,0x20(%r12)
    235f:	6b 65 
    2361:	66 41 c7 44 24 24 74 	movw   $0x74,0x24(%r12)
    2368:	00 
    2369:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    236e:	eb a4                	jmp    2314 <init_driver+0xda>
    2370:	48 b8 45 72 72 6f 72 	movabs $0x44203a726f727245,%rax
    2377:	3a 20 44 
    237a:	48 ba 4e 53 20 69 73 	movabs $0x6e7520736920534e,%rdx
    2381:	20 75 6e 
    2384:	49 89 04 24          	mov    %rax,(%r12)
    2388:	49 89 54 24 08       	mov    %rdx,0x8(%r12)
    238d:	48 b8 61 62 6c 65 20 	movabs $0x206f7420656c6261,%rax
    2394:	74 6f 20 
    2397:	48 ba 72 65 73 6f 6c 	movabs $0x2065766c6f736572,%rdx
    239e:	76 65 20 
    23a1:	49 89 44 24 10       	mov    %rax,0x10(%r12)
    23a6:	49 89 54 24 18       	mov    %rdx,0x18(%r12)
    23ab:	48 b8 73 65 72 76 65 	movabs $0x6120726576726573,%rax
    23b2:	72 20 61 
    23b5:	49 89 44 24 20       	mov    %rax,0x20(%r12)
    23ba:	41 c7 44 24 28 64 64 	movl   $0x65726464,0x28(%r12)
    23c1:	72 65 
    23c3:	66 41 c7 44 24 2c 73 	movw   $0x7373,0x2c(%r12)
    23ca:	73 
    23cb:	41 c6 44 24 2e 00    	movb   $0x0,0x2e(%r12)
    23d1:	89 df                	mov    %ebx,%edi
    23d3:	e8 08 ea ff ff       	callq  de0 <close@plt>
    23d8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    23dd:	e9 32 ff ff ff       	jmpq   2314 <init_driver+0xda>
    23e2:	4c 8d 05 c5 05 00 00 	lea    0x5c5(%rip),%r8        # 29ae <array.3415+0x30e>
    23e9:	48 8d 0d 78 05 00 00 	lea    0x578(%rip),%rcx        # 2968 <array.3415+0x2c8>
    23f0:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    23f7:	be 01 00 00 00       	mov    $0x1,%esi
    23fc:	4c 89 e7             	mov    %r12,%rdi
    23ff:	b8 00 00 00 00       	mov    $0x0,%eax
    2404:	e8 d7 ea ff ff       	callq  ee0 <__sprintf_chk@plt>
    2409:	89 df                	mov    %ebx,%edi
    240b:	e8 d0 e9 ff ff       	callq  de0 <close@plt>
    2410:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2415:	e9 fa fe ff ff       	jmpq   2314 <init_driver+0xda>

000000000000241a <driver_post>:
    241a:	53                   	push   %rbx
    241b:	48 89 cb             	mov    %rcx,%rbx
    241e:	85 d2                	test   %edx,%edx
    2420:	75 17                	jne    2439 <driver_post+0x1f>
    2422:	48 85 ff             	test   %rdi,%rdi
    2425:	74 05                	je     242c <driver_post+0x12>
    2427:	80 3f 00             	cmpb   $0x0,(%rdi)
    242a:	75 36                	jne    2462 <driver_post+0x48>
    242c:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
    2431:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
    2435:	89 d0                	mov    %edx,%eax
    2437:	5b                   	pop    %rbx
    2438:	c3                   	retq   
    2439:	48 89 f2             	mov    %rsi,%rdx
    243c:	48 8d 35 75 05 00 00 	lea    0x575(%rip),%rsi        # 29b8 <array.3415+0x318>
    2443:	bf 01 00 00 00       	mov    $0x1,%edi
    2448:	b8 00 00 00 00       	mov    $0x0,%eax
    244d:	e8 1e ea ff ff       	callq  e70 <__printf_chk@plt>
    2452:	66 c7 03 4f 4b       	movw   $0x4b4f,(%rbx)
    2457:	c6 43 02 00          	movb   $0x0,0x2(%rbx)
    245b:	b8 00 00 00 00       	mov    $0x0,%eax
    2460:	eb d5                	jmp    2437 <driver_post+0x1d>
    2462:	48 83 ec 08          	sub    $0x8,%rsp
    2466:	51                   	push   %rcx
    2467:	49 89 f1             	mov    %rsi,%r9
    246a:	4c 8d 05 5e 05 00 00 	lea    0x55e(%rip),%r8        # 29cf <array.3415+0x32f>
    2471:	48 89 f9             	mov    %rdi,%rcx
    2474:	48 8d 15 62 05 00 00 	lea    0x562(%rip),%rdx        # 29dd <array.3415+0x33d>
    247b:	be 6e 3b 00 00       	mov    $0x3b6e,%esi
    2480:	48 8d 3d 27 05 00 00 	lea    0x527(%rip),%rdi        # 29ae <array.3415+0x30e>
    2487:	e8 6d f5 ff ff       	callq  19f9 <submitr>
    248c:	48 83 c4 10          	add    $0x10,%rsp
    2490:	eb a5                	jmp    2437 <driver_post+0x1d>
    2492:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2499:	00 00 00 
    249c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000024a0 <__libc_csu_init>:
    24a0:	41 57                	push   %r15
    24a2:	41 56                	push   %r14
    24a4:	49 89 d7             	mov    %rdx,%r15
    24a7:	41 55                	push   %r13
    24a9:	41 54                	push   %r12
    24ab:	4c 8d 25 4e 18 20 00 	lea    0x20184e(%rip),%r12        # 203d00 <__frame_dummy_init_array_entry>
    24b2:	55                   	push   %rbp
    24b3:	48 8d 2d 4e 18 20 00 	lea    0x20184e(%rip),%rbp        # 203d08 <__init_array_end>
    24ba:	53                   	push   %rbx
    24bb:	41 89 fd             	mov    %edi,%r13d
    24be:	49 89 f6             	mov    %rsi,%r14
    24c1:	4c 29 e5             	sub    %r12,%rbp
    24c4:	48 83 ec 08          	sub    $0x8,%rsp
    24c8:	48 c1 fd 03          	sar    $0x3,%rbp
    24cc:	e8 87 e8 ff ff       	callq  d58 <_init>
    24d1:	48 85 ed             	test   %rbp,%rbp
    24d4:	74 20                	je     24f6 <__libc_csu_init+0x56>
    24d6:	31 db                	xor    %ebx,%ebx
    24d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    24df:	00 
    24e0:	4c 89 fa             	mov    %r15,%rdx
    24e3:	4c 89 f6             	mov    %r14,%rsi
    24e6:	44 89 ef             	mov    %r13d,%edi
    24e9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    24ed:	48 83 c3 01          	add    $0x1,%rbx
    24f1:	48 39 dd             	cmp    %rbx,%rbp
    24f4:	75 ea                	jne    24e0 <__libc_csu_init+0x40>
    24f6:	48 83 c4 08          	add    $0x8,%rsp
    24fa:	5b                   	pop    %rbx
    24fb:	5d                   	pop    %rbp
    24fc:	41 5c                	pop    %r12
    24fe:	41 5d                	pop    %r13
    2500:	41 5e                	pop    %r14
    2502:	41 5f                	pop    %r15
    2504:	c3                   	retq   
    2505:	90                   	nop
    2506:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    250d:	00 00 00 

0000000000002510 <__libc_csu_fini>:
    2510:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000002514 <_fini>:
    2514:	48 83 ec 08          	sub    $0x8,%rsp
    2518:	48 83 c4 08          	add    $0x8,%rsp
    251c:	c3                   	retq   